from typing import Union, Literal
import bxarcpy
from bxarcpy import 工具包
from bxarcpy.要素包 import 要素类


def 计算所属区域(输入要素路径, 区域要素名称="JX_街区范围线", 字段映射列表=[["所属街区", "街区编号"]], 计算方式: Literal["分割输入要素", "内点在区域要素内", "大部分在区域要素内"] = "分割输入要素", 输出要素路径="内存临时"):
    if 输出要素路径 == "内存临时":
        输出要素路径 = "in_memory\\AA_计算所属区域" + "_" + 工具包.生成短GUID()

    输入要素路径_复制后 = 要素类.要素创建_通过复制(输入要素路径)
    区域要素路径_复制后 = 要素类.要素创建_通过复制(区域要素名称)

    需要添加的字段列表 = [x[0] for x in 字段映射列表]
    for x in 需要添加的字段列表:
        要素类.字段添加(输入要素路径_复制后, x)

    区域要素保留字段列表 = [x[1] for x in 字段映射列表]
    要素类.字段删除(区域要素路径_复制后, 保留字段名称列表=区域要素保留字段列表)

    if 计算方式 == "分割输入要素":
        赋值后要素 = 要素类.要素创建_通过联合并赋值字段(输入要素路径_复制后, 区域要素路径_复制后, 字段映射列表)
        输出要素路径 = 要素类.要素创建_通过复制并重命名重名要素(赋值后要素, 输出要素路径, "计算所属区域前")

    elif 计算方式 == "内点在区域要素内":
        赋值后要素 = 要素类.要素创建_通过空间连接(输入要素路径_复制后, 区域要素路径_复制后, "内点在连接要素内")
        for x in 字段映射列表:
            要素类.字段计算(赋值后要素, x[0], f"!{x[1]}!")
        要素类.字段删除(赋值后要素, [x[1] for x in 字段映射列表])

        输出要素路径 = 要素类.要素创建_通过复制并重命名重名要素(赋值后要素, 输出要素路径, "计算所属区域前")

    elif 计算方式 == "大部分在区域要素内":
        赋值后要素 = 要素类.要素创建_通过空间连接(输入要素路径_复制后, 区域要素路径_复制后, "大部分在连接要素内")
        for x in 字段映射列表:
            要素类.字段计算(赋值后要素, x[0], f"!{x[1]}!")
        要素类.字段删除(赋值后要素, [x[1] for x in 字段映射列表])

        输出要素路径 = 要素类.要素创建_通过复制并重命名重名要素(赋值后要素, 输出要素路径, "计算所属区域前")

    return 输出要素路径


if __name__ == "__main__":
    工作空间 = r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb"
    from bxarcpy.环境包 import 环境管理器类

    with 环境管理器类.环境管理器类创建(工作空间):
        用地要素 = 计算所属区域("AA_DIST_用地规划图_ExportFeatures", 区域要素名称="JX_街区范围线", 字段映射列表=[["所属街区", "区域编号"]], 计算方式="大部分在区域要素内", 输出要素路径="AA_测试")
