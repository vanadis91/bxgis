from typing import Union, Literal
import bxarcpy


def 计算所属区域(输入要素名称, 区域要素名称="JX_街区范围线", 字段映射列表=[["所属街区", "街区编号"]], 计算方式: Literal["分割输入要素", "内点在区域要素内", "大部分在区域要素内"] = "分割输入要素", 输出要素名称="in_memory\\AA_计算所属区域"):
    if 输出要素名称 == "in_memory\\AA_计算所属区域":
        输出要素名称 = 输出要素名称 + "_" + bxarcpy.工具集.生成短GUID()

    输入要素 = bxarcpy.要素类.要素读取_通过名称(输入要素名称).要素创建_通过复制()
    区域要素 = bxarcpy.要素类.要素读取_通过名称(区域要素名称).要素创建_通过复制()

    需要添加的字段列表 = [x[0] for x in 字段映射列表]
    for x in 需要添加的字段列表:
        输入要素.字段添加(x)

    区域要素保留字段列表 = [x[1] for x in 字段映射列表]
    区域要素.字段删除(保留字段名称列表=区域要素保留字段列表)

    if 计算方式 == "分割输入要素":
        赋值后要素 = 输入要素.要素创建_通过联合并赋值字段(区域要素.名称, 字段映射列表)

        输出要素 = 赋值后要素.要素创建_通过复制并重命名重名要素(输出要素名称, 重名要素后缀="计算所属区域前")

    elif 计算方式 == "内点在区域要素内":
        赋值后要素 = 输入要素.要素创建_通过空间连接(区域要素.名称, "内点在连接要素内")
        for x in 字段映射列表:
            赋值后要素.字段计算(x[0], f"!{x[1]}!")


        赋值后要素.字段删除([x[1] for x in 字段映射列表])

        输出要素 = 赋值后要素.要素创建_通过复制并重命名重名要素(输出要素名称, 重名要素后缀="计算所属区域前")

    elif 计算方式 == "大部分在区域要素内":
        赋值后要素 = 输入要素.要素创建_通过空间连接(区域要素.名称, "大部分在连接要素内")
        for x in 字段映射列表:
            赋值后要素.字段计算(x[0], f"!{x[1]}!")

        赋值后要素.字段删除([x[1] for x in 字段映射列表])

        输出要素 = 赋值后要素.要素创建_通过复制并重命名重名要素(输出要素名称, 重名要素后缀="计算所属区域前")

    return 输出要素


if __name__ == "__main__":
    工作空间 = r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb"
    with bxarcpy.环境.环境管理器(工作空间):
        用地要素 = 计算所属区域("AA_DIST_用地规划图_ExportFeatures", 区域要素名称="JX_街区范围线", 字段映射列表=[["所属街区", "区域编号"]], 计算方式="大部分在区域要素内", 输出要素名称="AA_测试")
