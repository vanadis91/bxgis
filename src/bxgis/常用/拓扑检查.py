import bxarcpy.工具包 as 工具包
from bxarcpy.要素包 import 要素类
from bxarcpy.环境包 import 环境管理器类


def 拓扑检查(输入要素路径=r"C:\Users\beixiao\Desktop\01.dwg\控规地块", 是否拓扑检查=False, 是否范围检查=True, 是否转曲=True, 输出要素路径="内存临时"):
    if 输出要素路径 == "内存临时":
        输出要素路径 = "in_memory\\AA_拓扑检查" + "_" + 工具包.生成短GUID()
    # if 输入CAD图层名称 in ["点", "线", "面"]:
    #     输入CAD图层名称 = bxarcpy.常量._要素类型映射[输入CAD图层名称]

    # 日志类.输出调试(f"当前工作空间{bxarcpy.配置.当前工作空间}")
    # 输出要素集 = bxarcpy.要素数据集类.导入从CAD(输入CAD路径列表, r"AA_CAD导入GEO1")
    # 日志类.输出调试("输出的要素集是：" + 输出要素集.名称 + rf"\{输入CAD图层名称}")

    # 输入要素 = bxarcpy.要素类.要素读取_通过名称(输出要素集.名称 + rf"\{输入CAD图层名称}")

    输入要素 = 要素类.要素创建_通过复制(输入要素路径)

    # 输出要素集.要素数据集删除()

    if 是否拓扑检查:
        要素类.拓扑检查重叠(输入要素)

    输出要素 = 要素类.要素创建_通过复制并重命名重名要素(输入要素, 输出要素路径)
    return 输出要素


if __name__ == "__main__":
    工作空间 = r"C:\Users\beixiao\Desktop\新建文件地理数据库.gdb"
    with 环境管理器类.环境管理器类创建(工作空间):
        拓扑检查(输入要素路径=r"保护范围与建设控制地带", 是否拓扑检查=True, 是否范围检查=True, 是否转曲=True, 输出要素路径=r"内存临时")
