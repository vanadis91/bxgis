import bxarcpy
import bxarcpy.工具包 as 工具包
from bxarcpy.要素包 import 要素类, 输出路径生成_当采用内存临时时
from bxarcpy.游标包 import 游标类
from bxarcpy.数据库包 import 数据库类
from bxarcpy.要素数据集包 import 要素数据集类
from bxarcpy.环境包 import 环境管理器类, 输入输出类
from bxgis.配置 import 基本信息


def 计算文本链接用数据(
    用地规划要素路径=基本信息.项目信息.YD_用地_规划要素名称,
    用地调整要素路径=基本信息.项目信息.YD_用地_调整要素名称,
    用途分区要素路径=基本信息.项目信息.FQ_用途分区_规划要素名称,
    城镇集建区要素路径=基本信息.项目信息.KZX_城镇集建区要素名称,
    城镇弹性区要素路径=基本信息.项目信息.KZX_城镇弹性区要素名称,
    永久基本农田要素路径=基本信息.项目信息.KZX_永久基本农田要素名称,
    规划范围线要素路径=基本信息.项目信息.JX_规划范围线要素名称,
    上位耕地质量提升要素路径=基本信息.项目信息.CZ_上位规划_耕地质量提升,
    地类编号字段名称="地类名称",
    输出要素路径="内存临时",
):
    输出要素路径 = 输出路径生成_当采用内存临时时([用地规划要素路径]) if 输出要素路径 == "内存临时" else 输出要素路径

    集建区裁剪后 = 要素类.要素创建_通过裁剪(城镇集建区要素路径, 规划范围线要素路径)
    返回值 = 要素类.统计(输入要素路径=集建区裁剪后, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'集建区面积是：{返回值["无分组"]["_面积"]}')

    弹性区裁剪后 = 要素类.要素创建_通过裁剪(城镇弹性区要素路径, 规划范围线要素路径)
    返回值 = 要素类.统计(输入要素路径=弹性区裁剪后, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'弹性区面积是：{返回值["无分组"]["_面积"]}')

    永农裁剪后 = 要素类.要素创建_通过裁剪(永久基本农田要素路径, 规划范围线要素路径)
    返回值 = 要素类.统计(输入要素路径=永农裁剪后, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'永久基本农田面积是：{返回值["无分组"]["_面积"]}')

    集建区内用地 = 要素类.要素创建_通过裁剪(用地规划要素路径, 城镇集建区要素路径)
    集建区内可利用用地 = 要素类.要素创建_通过筛选(集建区内用地, "(开发动态 LIKE '新增' OR 开发动态 LIKE '新建') AND (地类编号 LIKE '07%' OR 地类编号 LIKE '08%' OR 地类编号 LIKE '09%' OR 地类编号 LIKE '10%' OR 地类编号 LIKE '11%' OR (地类编号 LIKE '12%' AND 地类编号 NOT LIKE '1201%' AND 地类编号 NOT LIKE '1202%' AND 地类编号 NOT LIKE '1205%' AND 地类编号 NOT LIKE '1207%') OR 地类编号 LIKE '13%' OR 地类编号 LIKE '1403%' OR 地类编号 LIKE '15%' OR 地类编号 LIKE '16%')")
    返回值 = 要素类.统计(输入要素路径=集建区内可利用用地, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'集建区内可利用地面积是：{返回值["无分组"]["_面积"]}')

    弹性区内用地 = 要素类.要素创建_通过裁剪(用地规划要素路径, 城镇弹性区要素路径)
    弹性区内可利用用地 = 要素类.要素创建_通过筛选(弹性区内用地, "(开发动态 LIKE '新增' OR 开发动态 LIKE '新建') AND (地类编号 LIKE '07%' OR 地类编号 LIKE '08%' OR 地类编号 LIKE '09%' OR 地类编号 LIKE '10%' OR 地类编号 LIKE '11%' OR (地类编号 LIKE '12%' AND 地类编号 NOT LIKE '1201%' AND 地类编号 NOT LIKE '1202%' AND 地类编号 NOT LIKE '1205%' AND 地类编号 NOT LIKE '1207%') OR 地类编号 LIKE '13%' OR 地类编号 LIKE '1403%' OR 地类编号 LIKE '15%' OR 地类编号 LIKE '16%')")
    返回值 = 要素类.统计(输入要素路径=弹性区内可利用用地, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'弹性区内可利用地面积是：{返回值["无分组"]["_面积"]}')

    用地裁剪后 = 要素类.要素创建_通过裁剪(用地规划要素路径, 规划范围线要素路径)
    返回值 = 要素类.统计(输入要素路径=用地裁剪后, 需统计字段及统计方式列表=[{"字段名称": "耕地保有量", "统计方式": "求和"}], 分组字段列表=["地类编号"])
    耕地面积 = 0
    for k, v in 返回值.items():
        if k[0:2] == "01":
            耕地面积 += v["耕地保有量"]
    输入输出类.输出消息(f"耕地保有量面积是：{耕地面积}")

    仅耕地 = 要素类.要素创建_通过筛选(用地调整要素路径, "地类编号_规划 LIKE '01%'")
    耕地质量提升要素 = 要素类.要素创建_通过相交([仅耕地, 上位耕地质量提升要素路径], 输出字段设置="仅第一个要素字段")
    返回值 = 要素类.统计(输入要素路径=耕地质量提升要素, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'耕地质量提升面积是：{返回值["无分组"]["_面积"]}')

    旱改水要素 = 要素类.要素创建_通过筛选(用地调整要素路径, "地类编号_规划 LIKE '0101%' AND 地类编号_基期 LIKE '0103%'")
    返回值 = 要素类.统计(输入要素路径=旱改水要素, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'旱改水面积是：{返回值["无分组"]["_面积"]}')

    垦造耕地要素 = 要素类.要素创建_通过筛选(用地调整要素路径, "地类编号_规划 LIKE '01%' AND 地类编号_基期 NOT LIKE '01%'")
    返回值 = 要素类.统计(输入要素路径=垦造耕地要素, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'垦造耕地面积是：{返回值["无分组"]["_面积"]}')

    耕地功能恢复要素 = 要素类.要素创建_通过筛选(用地调整要素路径, "地类编号_规划 LIKE '01%' AND 地类编号_基期 NOT LIKE '01%' AND 地类编号_二调 LIKE '01%'")
    返回值 = 要素类.统计(输入要素路径=耕地功能恢复要素, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'耕地功能恢复面积是：{返回值["无分组"]["_面积"]}')

    新增设施农用地要素 = 要素类.要素创建_通过筛选(用地调整要素路径, "地类编号_规划 LIKE '0602%' AND (地类编号_基期 LIKE '01%' OR 地类编号_基期 LIKE '02%' OR 地类编号_基期 LIKE '03%' OR 地类编号_基期 LIKE '04%' OR 地类编号_基期 LIKE '05%' OR 地类编号_基期 LIKE '0601%' OR 地类编号_基期 LIKE '17%')")
    返回值 = 要素类.统计(输入要素路径=新增设施农用地要素, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'新增设施农用地面积是：{返回值["无分组"]["_面积"]}')

    占用耕地要素 = 要素类.要素创建_通过筛选(用地调整要素路径, "地类编号_规划 NOT LIKE '01%' AND 地类编号_基期 LIKE '01%'")
    返回值 = 要素类.统计(输入要素路径=占用耕地要素, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'占用耕地面积是：{返回值["无分组"]["_面积"]}')

    返回值 = 要素类.统计(输入要素路径=用途分区要素路径, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=["分区名称"])
    输入输出类.输出消息(f"各用途分区面积：{返回值}")

    用地擦除后 = 要素类.要素创建_通过擦除(用地规划要素路径, 城镇集建区要素路径)
    用地擦除后 = 要素类.要素创建_通过擦除(用地擦除后, 城镇弹性区要素路径)
    开发边界外公园绿地 = 要素类.要素创建_通过筛选(用地擦除后, "地类编号 LIKE '%1401%'")
    返回值 = 要素类.统计(输入要素路径=开发边界外公园绿地, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'开发边界外公园绿地面积是：{返回值["无分组"]["_面积"]}')

    公园绿地 = 要素类.要素创建_通过筛选(用地规划要素路径, "地类编号 LIKE '%1401%'")
    返回值 = 要素类.统计(输入要素路径=公园绿地, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}, {"字段名称": "绿地面积指定", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'绿地内其他设施占用面积是：{返回值["无分组"]["_面积"]-返回值["无分组"]["绿地面积指定"]}')
    返回值 = 要素类.统计(输入要素路径=公园绿地, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=["地类编号"])
    输入输出类.输出消息(f"绿地地类编号包括了：{返回值.keys()}")

    城镇开发边界 = 要素类.要素创建_通过合并([城镇集建区要素路径, 城镇弹性区要素路径])
    用地擦除后 = 要素类.要素创建_通过裁剪(用地规划要素路径, 城镇开发边界)
    开发边界内工业 = 要素类.要素创建_通过筛选(用地擦除后, "地类编号 LIKE '1001%'")
    返回值 = 要素类.统计(输入要素路径=开发边界内工业, 需统计字段及统计方式列表=[{"字段名称": "_面积", "统计方式": "求和"}], 分组字段列表=[])
    输入输出类.输出消息(f'开发边界内工业用地面积是：{返回值["无分组"]["_面积"]}')
    return


if __name__ == "__main__":
    # 工作空间 = r"C:\Users\common\project\F富阳受降控规\受降北_数据库.gdb"
    工作空间 = r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb"
    with 环境管理器类.环境管理器类创建(工作空间):
        计算文本链接用数据("DIST_用地规划图")
