# -*- coding: utf-8 -*-

from bxpy.时间包 import 时间类, 时间间隔类
from bxpy.日志包 import 日志生成器
from bxarcpy.要素包 import 要素类, 字段类
from bxarcpy.几何包 import 几何类
from bxarcpy.游标包 import 游标类
from bxarcpy.数据库包 import 数据库类
from bxarcpy.要素数据集包 import 要素数据集类
from bxarcpy.环境包 import 环境管理器类, 输入输出类
from bxgis.配置.配置包 import 配置类

基本信息 = 配置类.项目信息对象获取()


@时间类.装饰器_运行时长
def 用地规划图生成(
    输入要素名称列表=[
        "DIST_用地叠合图",
        "YD_GIS方案_农用地设计",
    ],
    CAD导出色块要素名称="CZ_CAD导入_用地规划",
    CAD导出色块中空隙的地类="00",
    CAD导出色块中有效的地类列表=["07%", "08%", "09%", "10%", "11%", "12%", "13%", "14%", "15%", "16%", "1701%", "1702%", "1703%", "23%"],
    CAD导出色块中有效部分的要素名称="YD_CAD方案",
    CAD导出色块以外地类调整要素名称="YD_GIS方案_建设用地修改",
    GIS中已处理的细小面要素名称="YD_GIS方案_细小面处理",
    允许合并的细小面地类名称列表=["01%", "02%", "03%", "04%", "05%", "06%", "1207%", "17%"],
    细小面面积阈值="10",
    规划范围线要素名称=基本信息.项目信息.JX_规划范围线要素名称,
    是否拓扑检查=True,
    是否范围检查=True,
    是否曲线检查=True,
    输出要素名称="DIST_用地规划图",
):
    from bxpy.进度条包 import 进度条类

    日志生成器.临时开启日志()
    if 是否曲线检查:
        需要曲线检查的要素名称列表 = [x for x in 输入要素名称列表]
        if CAD导出色块要素名称:
            需要曲线检查的要素名称列表.append(CAD导出色块要素名称)
        if CAD导出色块以外地类调整要素名称:
            需要曲线检查的要素名称列表.append(CAD导出色块以外地类调整要素名称)
        if GIS中已处理的细小面要素名称:
            需要曲线检查的要素名称列表.append(GIS中已处理的细小面要素名称)
        是否包含曲线flag = False
        进度条 = 进度条类.进度条创建(需要曲线检查的要素名称列表, 前置信息="开始曲线检查")
        for 要素x in 进度条:
            进度条类.后置信息设置(进度条, {"当前检查的要素": 要素x})
            要素x = 要素类.要素创建_通过几何修复(要素x)
            with 游标类.游标创建("查询", 要素x, ["_形状"]) as 游标:
                for 游标x in 游标类.属性获取_数据_字典形式(游标, ["_形状"]):
                    if 几何类.是否包含曲线(游标x["_形状"]):
                        是否包含曲线flag = True
                        输入输出类.输出消息(f"【{要素x}】存在曲线，请增密后再继续。")
                        break
        if 是否包含曲线flag is False:
            输入输出类.输出消息(f"所有要素不存在曲线。")
        else:
            raise Exception("存在曲线，请增密后再继续。")

    输出要素 = _合并输入要素图层(输入要素名称列表)

    if CAD导出色块要素名称:
        输出要素, SQL_以CAD为准的地类, CAD导出色块中有效部分的要素名称 = _叠加CAD方案(
            输出要素,
            CAD导出色块要素名称,
            CAD导出色块中空隙的地类,
            CAD导出色块中有效的地类列表,
            规划范围线要素名称,
            CAD导出色块中有效部分的要素名称,
        )

    # 处理CAD导出色块以外区域中包含了CAD中才能有的地类
    if CAD导出色块以外地类调整要素名称:
        输出要素, GIS中更改以CAD为准地类色块的要素 = _处理CAD方案外建设用地(
            输出要素,
            CAD导出色块中有效部分的要素名称,
            SQL_以CAD为准的地类,
            CAD导出色块以外地类调整要素名称,
        )

    # 处理细小面
    if GIS中已处理的细小面要素名称:
        输出要素, GIS中已处理的细小面要素名称, 细小面合并后面积仍较小的地块 = _细小面处理(
            输出要素,
            GIS中已处理的细小面要素名称,
            允许合并的细小面地类名称列表,
            细小面面积阈值,
        )

    # 最终导出
    输出要素 = _整理输出要素字段(输出要素, 规划范围线要素名称, 输出要素名称)

    if 是否拓扑检查:
        日志生成器.输出调试(f"开始拓扑检查")
        需要拓扑的要素名称列表 = [x for x in 输入要素名称列表]
        if CAD导出色块要素名称:
            需要拓扑的要素名称列表.append(GIS中更改以CAD为准地类色块的要素)
            需要拓扑的要素名称列表.append(CAD导出色块要素名称)
        if GIS中已处理的细小面要素名称:
            需要拓扑的要素名称列表.append(GIS中已处理的细小面要素名称)
        需要拓扑的要素名称列表.append(输出要素)
        要素类.拓扑检查重叠_通过要素名称列表(需要拓扑的要素名称列表)

    if 是否范围检查:
        日志生成器.输出调试(f"开始范围检查")
        要素类.拓扑检查范围(输出要素, 规划范围线要素名称)
    return 输出要素


def _合并输入要素图层(输入要素名称列表):
    底层要素 = 要素类.要素创建_通过复制(输入要素名称列表[0])
    for x in 输入要素名称列表[1:]:
        底层要素 = 要素类.要素创建_通过更新(底层要素, x)
        时间类.等待(0.5)
        输入输出类.输出消息(f"完成了 {x} 的合并")
    要素类.字段删除(底层要素, 保留字段名称列表=[基本信息.地块要素字段映射.地类编号字段名称])
    输出要素 = 要素类.要素创建_通过多部件至单部件(底层要素)
    return 输出要素


def _叠加CAD方案(
    输入要素名称_用地,
    CAD方案要素名称,
    CAD方案中留白区域的地类,
    CAD方案中保留的地类列表,
    规划范围线要素名称,
    CAD方案中保留区域的要素,
):
    CAD色块要素 = CAD方案要素名称

    SQL_CAD地块中空隙的地类 = f"'{CAD方案中留白区域的地类}'"
    填充空隙后要素 = 要素类.要素创建_通过填充空隙(CAD色块要素, 规划范围线要素名称, SQL_CAD地块中空隙的地类)

    SQL_以CAD为准的地类 = ""
    for x in CAD方案中保留的地类列表:
        SQL_以CAD为准的地类 = SQL_以CAD为准的地类 + f"{基本信息.地块要素字段映射.地类编号字段名称} LIKE '{x}' OR "
    SQL_以CAD为准的地类 = SQL_以CAD为准的地类[0:-4]

    # 提取CAD中为准的色块
    YD_CAD色块_仅包含CAD中为准的色块 = 要素类.要素创建_通过筛选(填充空隙后要素, SQL_以CAD为准的地类)

    # 将CAD中为准的色块盖到多个图层叠加起来的用地图上
    输入要素名称_用地 = 要素类.要素创建_通过更新(YD_CAD色块_仅包含CAD中为准的色块, 输入要素名称_用地)
    输入要素名称_用地 = 要素类.要素创建_通过更新(输入要素名称_用地, YD_CAD色块_仅包含CAD中为准的色块)
    CAD方案中保留区域的要素 = 要素类.要素创建_通过复制并重命名重名要素(YD_CAD色块_仅包含CAD中为准的色块, CAD方案中保留区域的要素)
    输入要素名称_用地 = 要素类.要素创建_通过多部件至单部件(输入要素名称_用地)
    return 输入要素名称_用地, SQL_以CAD为准的地类, CAD方案中保留区域的要素


def _处理CAD方案外建设用地(
    输入要素名称_用地,
    CAD方案中保留区域的要素,
    SQL_以CAD为准的地类,
    CAD方案以外区域的地类调整要素,
):
    非CAD中的色块 = 要素类.要素创建_通过擦除(输入要素名称_用地, CAD方案中保留区域的要素)
    筛选后非CAD中的色块 = 要素类.要素创建_通过筛选(非CAD中的色块, SQL_以CAD为准的地类)
    要素类.字段删除(筛选后非CAD中的色块, 保留字段名称列表=[基本信息.地块要素字段映射.地类编号字段名称])

    # 把 现有的CAD色块外建设用地修改元素 叠加到 当前筛选后非CAD中的色块
    现有的CAD色块外建设用地修改元素 = 要素类.要素创建_通过复制(CAD方案以外区域的地类调整要素)
    相交后元素 = 要素类.要素创建_通过相交([现有的CAD色块外建设用地修改元素, 筛选后非CAD中的色块])
    要素类.字段删除(相交后元素, 保留字段名称列表=[基本信息.地块要素字段映射.地类编号字段名称])
    更新后要素 = 要素类.要素创建_通过更新(筛选后非CAD中的色块, 相交后元素)
    要素类.字段删除(更新后要素, 保留字段名称列表=[基本信息.地块要素字段映射.地类编号字段名称])

    # 把当前 叠加了此前修改过的要素 后的 非CAD中色块要素 按照地类进行融合
    更新后要素 = 要素类.要素创建_通过多部件至单部件(更新后要素)
    GIS中更改以CAD为准地类色块的要素 = 要素类.要素创建_通过融合(更新后要素, [基本信息.地块要素字段映射.地类编号字段名称])
    GIS中更改以CAD为准地类色块的要素 = 要素类.要素创建_通过复制并重命名重名要素(GIS中更改以CAD为准地类色块的要素, CAD方案以外区域的地类调整要素)

    # 判断是不是需要修改程序结束后在对 非CAD中色块要素 地类进行修改
    判断是否需要处理GIS中更改以CAD为准地类色块的要素 = 要素类.要素创建_通过筛选(GIS中更改以CAD为准地类色块的要素, SQL_以CAD为准的地类)
    if 要素类.属性获取_几何数量(判断是否需要处理GIS中更改以CAD为准地类色块的要素) > 0:
        日志生成器.输出警告(f"CAD导出色块以外地类调整要素 中 存在部分 CAD色块 才拥有的地类")
    else:
        日志生成器.输出调试(f"CAD导出色块以外区域的地类都微调完毕了")

    # 更新用地，把 非CAD中色块要素 叠加上去
    输入要素名称_用地 = 要素类.要素创建_通过更新(输入要素名称_用地, GIS中更改以CAD为准地类色块的要素)
    输入要素名称_用地 = 要素类.要素创建_通过多部件至单部件(输入要素名称_用地)
    return 输入要素名称_用地, GIS中更改以CAD为准地类色块的要素


def _细小面处理(
    输入要素名称_用地,
    已处理的细小面要素,
    允许合并的细小面地类名称列表=["01%", "02%", "03%", "04%", "05%", "06%", "1207%", "17%"],
    细小面面积阈值="10",
):
    已处理细小面要素_临时 = 要素类.要素创建_通过复制(已处理的细小面要素)
    要素类.字段删除(已处理细小面要素_临时, 保留字段名称列表=["待处理", 基本信息.地块要素字段映射.地类编号字段名称])

    # 把非建设用地和道路融合一下
    SQL_允许合并的地类列表 = ""
    for x in 允许合并的细小面地类名称列表:
        SQL_允许合并的地类列表 = SQL_允许合并的地类列表 + f"{基本信息.地块要素字段映射.地类编号字段名称} LIKE '{x}' OR "
    SQL_允许合并的地类列表 = SQL_允许合并的地类列表[0:-4]
    需要融合的要素 = 要素类.要素创建_通过筛选(输入要素名称_用地, SQL_允许合并的地类列表)
    需要融合的要素 = 要素类.要素创建_通过融合(需要融合的要素, [基本信息.地块要素字段映射.地类编号字段名称])
    输入要素名称_用地 = 要素类.要素创建_通过更新并合并字段(输入要素名称_用地, 需要融合的要素)

    # 用地添加 面积
    要素类.字段添加(输入要素名称_用地, "面积1", "双精度")
    with 游标类.游标创建("更新", 输入要素名称_用地, ["_面积", "面积1"]) as 游标:
        for x in 游标类.属性获取_数据_字典形式(游标, ["_面积", "面积1"]):
            x["面积1"] = x["_面积"]
            游标类.行更新_字典形式(游标, x)

    # 把面积小于10的筛选出来，细小面要素 字段全清空，新添 所属地块 字段
    细小面要素 = 要素类.要素创建_通过筛选(输入要素名称_用地, f"面积1 <= {细小面面积阈值}")
    要素类.字段删除(输入要素名称_用地, ["面积1"])
    要素类.字段添加(细小面要素, "待处理", "长整型")
    要素类.字段计算(细小面要素, "待处理", "1")
    要素类.字段删除(细小面要素, 保留字段名称列表=["待处理", 基本信息.地块要素字段映射.地类编号字段名称])

    # 把 现有的CAD色块外建设用地修改元素 叠加到 当前筛选后非CAD中的色块
    相交后元素 = 要素类.要素创建_通过相交([已处理细小面要素_临时, 细小面要素])
    要素类.字段删除(相交后元素, 保留字段名称列表=["待处理", 基本信息.地块要素字段映射.地类编号字段名称])
    更新后要素 = 要素类.要素创建_通过更新(细小面要素, 相交后元素)
    要素类.字段删除(更新后要素, 保留字段名称列表=["待处理", 基本信息.地块要素字段映射.地类编号字段名称])

    # 把当前 叠加了此前修改过的要素 后的 非CAD中色块要素 按照地类进行融合
    更新后要素 = 要素类.要素创建_通过多部件至单部件(更新后要素)
    更新后要素 = 要素类.要素创建_通过融合(更新后要素, ["待处理", 基本信息.地块要素字段映射.地类编号字段名称])

    # 判断是不是需要修改程序结束后在对 非CAD中色块要素 地类进行修改
    筛选那些还需要处理的细小面 = 要素类.要素创建_通过筛选(更新后要素, "待处理 = 1")
    if 要素类.属性获取_几何数量(筛选那些还需要处理的细小面) > 0:
        日志生成器.输出警告(f"尚有部分的细小面需要进行处理")
    else:
        日志生成器.输出调试(f"所有的细小面都处理完毕了")

    # 更新用地，把 非CAD中色块要素 叠加上去
    已处理的细小面要素 = 要素类.要素创建_通过复制并重命名重名要素(更新后要素, 已处理的细小面要素)

    # 把非建设用地和道路融合一下
    输入要素名称_用地 = 要素类.要素创建_通过更新(输入要素名称_用地, 更新后要素)
    需要融合的要素 = 要素类.要素创建_通过筛选(输入要素名称_用地, SQL_允许合并的地类列表)
    需要融合的要素 = 要素类.要素创建_通过融合(需要融合的要素, [基本信息.地块要素字段映射.地类编号字段名称])
    输入要素名称_用地 = 要素类.要素创建_通过更新并合并字段(输入要素名称_用地, 需要融合的要素)
    输入要素名称_用地 = 要素类.要素创建_通过多部件至单部件(输入要素名称_用地)

    # 用地添加 面积
    要素类.字段添加(输入要素名称_用地, "面积1", "双精度")
    with 游标类.游标创建("更新", 输入要素名称_用地, ["_面积", "面积1"]) as 游标:
        for x in 游标类.属性获取_数据_字典形式(游标, ["_面积", "面积1"]):
            x["面积1"] = x["_面积"]
            游标类.行更新_字典形式(游标, x)

    # 把面积小于10的筛选出来，细小面要素 字段全清空，新添 所属地块 字段
    用于验证细小面要素 = 要素类.要素创建_通过筛选(输入要素名称_用地, f"面积1 <= {细小面面积阈值}")
    要素类.字段删除(输入要素名称_用地, ["面积1"])
    要素类.字段添加(用于验证细小面要素, "待处理", "长整型")
    要素类.字段计算(用于验证细小面要素, "待处理", "1")
    要素类.字段删除(用于验证细小面要素, 保留字段名称列表=["待处理", 基本信息.地块要素字段映射.地类编号字段名称])
    if 要素类.属性获取_几何数量(用于验证细小面要素) > 0:
        日志生成器.输出调试(f"细小面合并后仍有面积较小的地块，已导出到【AA_细小面合并后面积仍较小的地块】，这些细小面请检查下是不是特例，不是特例则需修改【YD_GIS方案_细小面处理】")
        细小面合并后面积仍较小的地块 = 要素类.要素创建_通过复制并重命名重名要素(用于验证细小面要素, "AA_细小面合并后面积仍较小的地块")
    return 输入要素名称_用地, 已处理的细小面要素, 细小面合并后面积仍较小的地块


def _整理输出要素字段(输入要素名称_用地, 规划范围线要素名称, 输出要素名称):
    输入要素名称_用地 = 要素类.要素创建_通过多部件至单部件(输入要素名称_用地)
    要素类.字段删除(输入要素名称_用地, ["综合耕地N", "处理方向", "综合净面积", "综合耕地N_1", "处理方向_1", "综合净面积_1", "ORIG_FID"])
    # 删除规划范围以外区域
    if 规划范围线要素名称:
        输入要素名称_用地 = 要素类.要素创建_通过裁剪(输入要素名称_用地, 规划范围线要素名称)

    要素类.字段删除(输入要素名称_用地, ["地块性质"])
    输出要素字段名称列表 = 要素类.字段名称列表获取(输入要素名称_用地)
    for x in [
        基本信息.地块要素字段映射.用地大类字段名称,
        基本信息.地块要素字段映射.地块性质别称字段名称,
        基本信息.地块要素字段映射.地块编号字段名称,
        基本信息.地块要素字段映射.性质名称字段名称,
        基本信息.地块要素字段映射.所属街区字段名称,
        基本信息.地块要素字段映射.所属街坊字段名称,
        基本信息.地块要素字段映射.所属分村字段名称,
        基本信息.地块要素字段映射.地类编号字段名称,
    ]:
        if x in 输出要素字段名称列表:
            # 要素类.字段修改(输入要素名称_用地, x, x + "_1")
            # 要素类.字段修改(输入要素名称_用地, x + "_1", x)
            要素类.字段添加(输入要素名称_用地, x + "_1")
            要素类.字段计算(输入要素名称_用地, x + "_1", f"!{x}!")
            要素类.字段删除(输入要素名称_用地, [x])
            要素类.字段修改(输入要素名称_用地, x + "_1", x, x, 清除字段别称=False)
        else:
            要素类.字段添加(输入要素名称_用地, x)
    输入要素名称_用地 = 要素类.要素创建_通过复制并重命名重名要素(输入要素名称_用地, 输出要素名称)
    return 输入要素名称_用地


if __name__ == "__main__":
    日志生成器.开启()
    工作空间 = r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb"
    with 环境管理器类.环境管理器类创建(工作空间):
        用地规划图生成(
            输入要素名称列表=["DIST_用地叠合图"],
            CAD导出色块要素名称="CZ_CAD导入_用地规划",
            CAD导出色块中空隙的地类="00",
            CAD导出色块中有效的地类列表=["07%", "08%", "09%", "10%", "11%", "12%", "13%", "14%", "15%", "16%", "1701%", "1702%", "1703%", "23%"],
            CAD导出色块中有效部分的要素名称="YD_CAD方案",
            CAD导出色块以外地类调整要素名称="YD_GIS方案_建设用地修改",
            GIS中已处理的细小面要素名称="YD_GIS方案_细小面处理",
            允许合并的细小面地类名称列表=["01%", "02%", "03%", "04%", "05%", "06%", "1207%", "17%"],
            细小面面积阈值="10",
            是否拓扑检查=True,
            是否范围检查=True,
            是否曲线检查=True,
            规划范围线要素名称="JX_规划范围线",
            输出要素名称="DIST_用地规划图",
        )
