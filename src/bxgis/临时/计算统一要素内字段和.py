# -*- coding: utf-8 -*-

from bxarcpy.要素包 import 要素类, 字段类
from bxarcpy.数据库包 import 数据库类
from bxarcpy.游标包 import 游标类
from bxpy.日志包 import 日志生成器
from bxpy.基本对象包 import 整类
from bxarcpy.环境包 import 环境管理器类, 输入输出类
from bxgis.配置.配置包 import 配置类

基本信息 = 配置类.项目信息对象获取()
import bxarcpy.工具包 as 工具包


def 计算统一要素内字段和(
    输入要素路径="DIST_用地规划图",
    输出要素路径="内存临时",
):
    if 输出要素路径 == "内存临时":
        输出要素路径 = "in_memory\\AA_规划站点" + "_" + 工具包.生成短GUID()
    输入要素 = 要素类.要素创建_通过复制(输入要素路径)

    操作字段 = ["_ID", "_形状", "Name", "需求度"]
    with 游标类.游标创建("查询", 输入要素, 操作字段) as 游标1:
        for 要素x in 游标类.属性获取_数据_字典形式(游标1, 操作字段):
            if 要素x["_ID"] < 247:
                continue
            新要素名称 = "a" + f'{要素x["_ID"]:03}' + 要素x["Name"].split(":")[0].strip().replace("-", "").replace("(", "").replace(")", "").replace("/", "")
            print(新要素名称)
            try:
                输出要素 = 要素类.要素创建_通过名称(新要素名称, 模板=输入要素)
                with 游标类.游标创建("插入", 输出要素, ["_形状", "Name", "需求度"]) as 游标2:
                    游标类.行插入_字典形式(游标2, 要素x, ["_形状", "Name", "需求度"])
                要素类.要素创建_通过复制并重命名重名要素(输出要素, 新要素名称)
            except Exception as e:
                print(e)

    return 输出要素


def 计算统一要素内字段和2(
    输入数据库路径=r"C:\Users\beixiao\Desktop\test.gdb",
    输出要素路径="内存临时",
):
    要素名称列表 = 数据库类.属性获取_要素名称列表(输入数据库路径)
    要素名称列表temp = []
    for x in 要素名称列表:
        if "联合至" not in x and x != "test":
            if int(x[1:4]) >= 29:
                要素名称列表temp.append(x)
    要素名称列表 = 要素名称列表temp

    print(f"共有要素{len(要素名称列表)}个")
    input(要素名称列表)

    # 第一个要素 = 要素类.要素创建_通过复制(要素名称列表[0])
    # 要素类.字段删除(第一个要素, 保留字段名称列表=["需求度", "既有需求度"])
    # 要素类.字段添加_双精度(第一个要素, "既有需求度")
    # 要素类.字段计算(第一个要素, "既有需求度", "!需求度!")
    # 要素类.字段删除(第一个要素, ["需求度"])

    第一个要素 = 要素类.要素创建_通过复制("联合至a028四川华西绿舍建材有限公司崔家店路")

    for x in 要素名称列表:
        联合要素 = 要素类.要素创建_通过复制(x)
        要素类.字段删除(联合要素, 保留字段名称列表=["需求度"])

        联合后要素 = 要素类.要素创建_通过联合并赋值字段(第一个要素, 联合要素, [["需求度", "需求度"]], 是否检查两者差异=False)
        要素类.字段计算(联合后要素, "既有需求度", "!既有需求度!+!需求度!")
        要素类.字段删除(联合后要素, ["需求度"])
        第一个要素 = 联合后要素
        print(f"联合至{x}")
        要素类.要素创建_通过复制并重命名重名要素(联合后要素, f"联合至{x}")


def 计算统一要素内字段和3(
    输入数据库路径=r"C:\Users\beixiao\Desktop\test.gdb",
    输出要素路径="内存临时",
):
    要素名称列表 = 数据库类.属性获取_要素名称列表(输入数据库路径)
    要素名称列表temp = []
    for x in 要素名称列表:
        if "联合至" not in x and "test" not in x and "栅格" not in x:
            if int(x[1:4]) >= 0:
                要素名称列表temp.append(x)
    要素名称列表 = 要素名称列表temp

    print(f"共有要素{len(要素名称列表)}个")
    input(要素名称列表)

    # 第一个要素 = 要素类.要素创建_通过复制(要素名称列表[0])
    # 要素类.字段删除(第一个要素, 保留字段名称列表=["需求度", "既有需求度"])
    # 要素类.字段添加_双精度(第一个要素, "既有需求度")
    # 要素类.字段计算(第一个要素, "既有需求度", "!需求度!")
    # 要素类.字段删除(第一个要素, ["需求度"])

    for x in 要素名称列表:
        栅格要素 = 要素类.要素创建_通过转栅格(x, "需求度", 像元大小=100, 输出要素路径=f"{x}_转栅格2")
        print(f"已转换{x}")


def 计算统一要素内字段和4(
    输入数据库路径=r"C:\Users\beixiao\Desktop\test.gdb",
    输出要素路径="内存临时",
):
    要素名称列表 = 数据库类.属性获取_栅格名称列表(输入数据库路径)
    要素名称列表temp = []
    for 要素x in 要素名称列表:
        if "联合至" not in 要素x and "test" not in 要素x and "栅格2" in 要素x:
            if int(要素x[1:4]) >= 0:
                要素名称列表temp.append(要素x)
    要素名称列表 = 要素名称列表temp
    from bxpy.基本对象包 import 表类
    from bxpy.时间包 import 时间类

    要素名称列表 = 表类.排序(lambda x: int(x[1:4]), 要素名称列表)

    print(f"共有要素{len(要素名称列表)}个")
    input(要素名称列表)

    第一个要素 = 要素类.要素创建_通过复制(要素名称列表[0])
    要素名称列表 = 要素名称列表[1:]

    # 第一个要素 = 要素类.要素创建_通过复制("联合至a093四川康藏路桥有限公司名山拌合站_转栅格_栅格")

    要素名称列表的列表 = []
    含有二十个要素的列表 = []
    for x in 要素名称列表:
        含有二十个要素的列表.append(x)
        if len(含有二十个要素的列表) == 20:
            要素名称列表的列表.append(含有二十个要素的列表)
            含有二十个要素的列表 = []
    if len(含有二十个要素的列表) > 0:
        要素名称列表的列表.append(含有二十个要素的列表)

    for 要素名称列表 in 要素名称列表的列表:
        默认变量列表 = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u"]
        要素个数 = len([第一个要素, *要素名称列表])
        变量列表 = 默认变量列表[0:要素个数]
        print(f"变量列表：{变量列表}")

        表达式列表 = [f"Con(IsNull({x}), 0, {x})" for x in 变量列表]
        表达式 = " + ".join(表达式列表)
        print(f"表达式：{表达式}")

        要素类.要素创建_通过栅格计算器([第一个要素, *要素名称列表], 变量列表, 表达式=表达式, 输出要素路径=f"联合至{[第一个要素, *要素名称列表][-1]}_栅格2")
        第一个要素 = f"联合至{[第一个要素, *要素名称列表][-1]}_栅格2"
        print(f"联合至{[第一个要素, *要素名称列表][-1]}_栅格2")
    # for 要素x in 要素名称列表:
    #     要素类.要素创建_通过栅格计算器([第一个要素, 要素x], ["x", "y"], "Con(IsNull(x), 0, x) + Con(IsNull(y), 0, y)", 输出要素路径=f"联合至{要素x}_栅格")
    #     第一个要素 = f"联合至{要素x}_栅格"
    #     print(f"联合至{要素x}_栅格")


if __name__ == "__main__":
    工作空间 = r"C:\Users\beixiao\Desktop\test2.gdb"
    with 环境管理器类.环境管理器类创建(工作空间):
        JX_行政界线街道 = 计算统一要素内字段和4(
            输入数据库路径=r"C:\Users\beixiao\Desktop\test2.gdb",
        )
