# -*- coding: utf-8 -*-

import bxarcpy
from bxpy import 时间
from bxpy import 日志


def 用途创建_生成用途分区图(
    规划用地要素名称="DIST_用地规划图",
    现状用地要素名称="DIST_用地现状图",
    农田整备要素名称列表=["YD_上位_粮食生产功能区", "YD_上位农用地落实_耕地质量提升"],
    城镇开发边界要素名称="KZX_城镇开发边界",
    永久基本农田要素名称="KZX_永久基本农田",
    城镇开发边界外集建区修改要素名称="YT_城镇开发边界外集建区修改",
    其他需要叠合的要素名称列表=[],
):
    规划用地要素 = bxarcpy.要素类.要素读取_通过名称(规划用地要素名称).要素创建_通过复制()
    现状用地要素 = bxarcpy.要素类.要素读取_通过名称(现状用地要素名称).要素创建_通过复制()

    规划用地要素.字段删除(保留字段名称列表=["地类编号"]).字段修改("地类编号", "地类编号_规划")
    现状用地要素.字段删除(保留字段名称列表=["地类编号"]).字段修改("地类编号", "地类编号_现状")
    用地要素 = 规划用地要素.要素创建_通过联合([现状用地要素.名称])
    用地要素.字段删除(保留字段名称列表=["地类编号_规划", "地类编号_现状"]).字段添加("用途管制分区")

    # 将地类编号映射为用途管制分区
    import bxpandas as pd

    a = pd.转换.excel文件转数据框架(r"C:\Users\beixiao\appconfig\ArcGIS\020.地类转换\地类转换_地类与用途分区转换.xls", 要读取的列=[0, 1], 数据类型={"新地类编号": str, "用途管制分区1": str})
    用途管制分区映射 = pd.转换.数据框架转字典(a)
    with bxarcpy.游标类.游标创建_通过名称("更新", 用地要素.名称, ["地类编号_规划", "用途管制分区"]) as 游标:
        是否存在无对应用途管制分区的地类flag = False
        for x in 游标:
            对应的对象列表 = [y for y in 用途管制分区映射 if y["新地类编号"] == x["地类编号_规划"]]
            if len(对应的对象列表) > 0:
                x["用途管制分区"] = 对应的对象列表[0]["用途管制分区1"]
                游标.行更新(x)
            else:
                bxarcpy.环境.输出消息(f"未找到地类编号 {x['地类编号']} 对应的用途管制分区")
                是否存在无对应用途管制分区的地类flag = True
    if 是否存在无对应用途管制分区的地类flag:
        raise ValueError("程序中断，部分地类未找到对应的用途管制分区。")

    # 梳理哪些属于农田整备区
    with bxarcpy.游标类.游标创建_通过名称("更新", 用地要素.名称, ["地类编号_现状", "地类编号_规划", "用途管制分区"]) as 游标:
        from bxpy import 字

        for x in 游标:
            if 字.匹配正则(x["地类编号_现状"], "^(?!01).*") and 字.匹配正则(x["地类编号_规划"], "^01.*"):
                x["用途管制分区"] = "农田整备区"
                游标.行更新(x)

    for x in 农田整备要素名称列表:
        农田整备要素 = bxarcpy.要素类.要素读取_通过名称(x).要素创建_通过复制()
        农田整备要素.字段添加("用途管制分区1").字段计算("用途管制分区1", '"农田整备区"').字段删除(保留字段名称列表=["用途管制分区1"])
        联合后要素 = 用地要素.要素创建_通过联合([农田整备要素.名称])
        with bxarcpy.游标类.游标创建_通过名称("更新", 联合后要素.名称, ["用途管制分区", "用途管制分区1"]) as 游标:
            for x in 游标:
                if x["用途管制分区1"] not in [None, "", " "]:
                    x["用途管制分区"] = x["用途管制分区1"]
                    游标.行更新(x)
        联合后要素.字段删除(保留字段名称列表=["地类编号_现状", "地类编号_规划", "用途管制分区"])
        用地要素 = 联合后要素

    # 处理永久基本农田
    永久基本农田要素 = bxarcpy.要素类.要素读取_通过名称(永久基本农田要素名称).要素创建_通过复制()
    永久基本农田要素.字段添加("用途管制分区1").字段计算("用途管制分区1", '"永久基本农田一般区"').字段删除(保留字段名称列表=["用途管制分区1"])
    联合后要素 = 用地要素.要素创建_通过联合([永久基本农田要素.名称])
    with bxarcpy.游标类.游标创建_通过名称("更新", 联合后要素.名称, ["用途管制分区", "用途管制分区1"]) as 游标:
        for x in 游标:
            if x["用途管制分区1"] not in [None, "", " "]:
                x["用途管制分区"] = x["用途管制分区1"]
                游标.行更新(x)
    联合后要素.字段删除(保留字段名称列表=["地类编号_现状", "地类编号_规划", "用途管制分区"])
    用地要素 = 联合后要素

    # 处理城镇开发边界
    城镇开发边界要素 = bxarcpy.要素类.要素读取_通过名称(城镇开发边界要素名称).要素创建_通过复制()
    城镇开发边界要素.字段添加("用途管制分区1").字段计算("用途管制分区1", "!控制线名称!").字段删除(保留字段名称列表=["用途管制分区1"])
    联合后要素 = 用地要素.要素创建_通过联合([城镇开发边界要素.名称])
    with bxarcpy.游标类.游标创建_通过名称("更新", 联合后要素.名称, ["用途管制分区", "用途管制分区1"]) as 游标:
        for x in 游标:
            if x["用途管制分区1"] not in [None, "", " "]:
                x["用途管制分区"] = x["用途管制分区1"]
                游标.行更新(x)
    联合后要素.字段删除(保留字段名称列表=["地类编号_现状", "地类编号_规划", "用途管制分区"])
    用地要素 = 联合后要素

    # 梳理开发边界外的集建区
    城镇开发边界要素 = bxarcpy.要素类.要素读取_通过名称(城镇开发边界要素名称).要素创建_通过复制()
    现有城镇开发边界外集建区修改要素 = bxarcpy.要素类.要素读取_通过名称(城镇开发边界外集建区修改要素名称).要素创建_通过复制()

    擦除城镇开发边界后要素 = 用地要素.要素创建_通过擦除(城镇开发边界要素.名称)

    需要修改用途的要素 = 擦除城镇开发边界后要素.要素创建_通过筛选("用途管制分区 LIKE '城镇集中建设区'")

    相交后元素 = 现有城镇开发边界外集建区修改要素.要素创建_通过相交([需要修改用途的要素.名称]).字段删除(保留字段名称列表=["用途管制分区"])

    更新后要素 = 需要修改用途的要素.要素创建_通过更新(相交后元素.名称).字段删除(保留字段名称列表=["用途管制分区"]).要素创建_通过多部件至单部件()

    更新后城镇开发边界外集建区修改要素 = 更新后要素.要素创建_通过复制并重命名重名要素(城镇开发边界外集建区修改要素名称)

    更新后仍需要修改用途的要素 = 更新后城镇开发边界外集建区修改要素.要素创建_通过筛选("用途管制分区 LIKE '城镇集中建设区'")
    if 更新后仍需要修改用途的要素.几何数量 > 0:
        bxarcpy.环境.输出消息(f"更新后城镇开发边界外集建区修改要素 中 存在 城镇集中建设区")
    else:
        bxarcpy.环境.输出消息(f"更新后城镇开发边界外集建区修改要素 中 不存在 城镇集中建设区")

    用地要素 = 用地要素.要素创建_通过更新并合并字段(更新后城镇开发边界外集建区修改要素.名称)

    # 叠合其他要素
    for x in 其他需要叠合的要素名称列表:
        其他要素 = bxarcpy.要素类.要素读取_通过名称(x).要素创建_通过复制()
        用地要素 = 用地要素.要素创建_通过更新并合并字段(其他要素.名称)

    用地要素.要素创建_通过复制并重命名重名要素("DIST_用途分区图")


if __name__ == "__main__":
    工作空间 = r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb"
    with bxarcpy.环境.环境管理器(工作空间):
        用途创建_生成用途分区图(规划用地要素名称="DIST_用地规划图", 现状用地要素名称="DIST_用地现状图", 农田整备要素名称列表=["YD_上位_粮食生产功能区", "YD_上位农用地落实_耕地质量提升"], 城镇开发边界要素名称="KZX_城镇开发边界", 永久基本农田要素名称="KZX_永久基本农田", 城镇开发边界外集建区修改要素名称="YT_城镇开发边界外集建区修改", 其他需要叠合的要素名称列表=[])
