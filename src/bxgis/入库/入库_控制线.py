# -*- coding: utf-8 -*-

from typing import Literal
import bxarcpy.工具包 as 工具包
from bxarcpy.要素包 import 要素类
from bxarcpy.游标包 import 游标类
from bxpy.日志包 import 日志生成器, 日志处理器
from bxarcpy.数据库包 import 数据库类
from bxarcpy.要素数据集包 import 要素数据集类
from bxarcpy.环境包 import 环境管理器类, 输入输出类
from bxgis.配置.配置包 import 配置类

基本信息 = 配置类.项目信息对象获取()

控制线类型与名称映射 = [
    {"类型名称": "道路中心线-公路", "类型编码": "DLZX-GL", "图层名称": "DL_道路中线"},
    {"类型名称": "道路边线-公路", "类型编码": "DLBX-GL", "图层名称": "DL_道路边线"},
    {"类型名称": "道路中心线-快速路", "类型编码": "DLZX-KS", "图层名称": "DL_道路中线"},
    {"类型名称": "道路边线-快速路", "类型编码": "DLBX-KS", "图层名称": "DL_道路边线"},
    {"类型名称": "道路中心线-主干路", "类型编码": "DLZX-ZG", "图层名称": "DL_道路中线"},
    {"类型名称": "道路边线-主干路", "类型编码": "DLBX-ZG", "图层名称": "DL_道路边线"},
    {"类型名称": "道路中心线-次干路", "类型编码": "DLZX-CG", "图层名称": "DL_道路中线"},
    {"类型名称": "道路边线-次干路", "类型编码": "DLBX-CG", "图层名称": "DL_道路边线"},
    {"类型名称": "道路中心线-支路", "类型编码": "DLZX-ZL", "图层名称": "DL_道路中线"},
    {"类型名称": "道路边线-支路", "类型编码": "DLBX-ZL", "图层名称": "DL_道路边线"},
    {"类型名称": "道路边线-高架", "类型编码": "DLBX-GJ", "图层名称": "GZW_高架桥"},
    {"类型名称": "道路边线-隧道", "类型编码": "DLBX-SD", "图层名称": "GZW_隧道"},
    {"类型名称": "河道中心线", "类型编码": "HDZX", "图层名称": "DL_河道中线"},  # 开发边界外河道以及开发边界内的现状河道不需河道中心线
    {"类型名称": "河道边线", "类型编码": "HDBX", "图层名称": "DL_河道边线"},
    {"类型名称": "绿化线", "类型编码": "LHX", "图层名称": "GZW_绿化线"},
    {"类型名称": "铁路", "类型编码": "TL", "图层名称": "GZW_铁路线"},  # 铁路轨道中心线以及两条控制廊道
    {"类型名称": "输油管道|设施线", "类型编码": "SYG", "图层名称": "GZW_输油管"},  # 设施线以及两条控制廊道
    {"类型名称": "原水输水管线", "类型编码": "YS", "图层名称": "GZW_原水管"},  # 设施线以及两条控制廊道
    {"类型名称": "高压电力架空线", "类型编码": "GYX", "图层名称": "GZW_高压线"},  # 架空的电力线路，设施线以及两条控制廊道
    {"类型名称": "高压燃气设施线", "类型编码": "TRQ", "图层名称": "GZW_天然气"},  # 设施线以及两条控制廊道，注明省管或市管天然气
    {"类型名称": "综合管廊", "类型编码": "ZHGL", "图层名称": "GZW_综合管廊"},
    {"类型名称": "自来水管线", "类型编码": "GX-S", "图层名称": "SZ_给水管"},
    {"类型名称": "污水管线", "类型编码": "GX-W", "图层名称": "SZ_污水管"},
    {"类型名称": "雨水管线", "类型编码": "GX-Y", "图层名称": "SZ_雨水管"},
    {"类型名称": "地下电力管线", "类型编码": "GX-D", "图层名称": "SZ_电力线"},
    {"类型名称": "中压燃气管线", "类型编码": "GX-Q", "图层名称": "SZ_燃气管"},
    {"类型名称": "热力管线", "类型编码": "RL", "图层名称": "SZ_热力管"},
    {"类型名称": "通信管线", "类型编码": "TX", "图层名称": "SZ_通信线"},
    {"类型名称": "防洪（潮）设施控制线", "类型编码": "FH", "图层名称": "GZW_防洪设施"},
    {"类型名称": "综合防灾减灾设施控制线", "类型编码": "FZ", "图层名称": "GZW_综合防灾设施"},
    {"类型名称": "微波通道", "类型编码": "WBTD", "图层名称": "GZW_微波通道"},
    {"类型名称": "建筑控制高度分区线", "类型编码": "GDFQ", "图层名称": "GZW_高度分区"},
    {"类型名称": "地块间公共通道", "类型编码": "DKJGGTD", "图层名称": "GZW_共用通道"},
    {"类型名称": "远景道路控制线", "类型编码": "YJDLKZ", "图层名称": "GZW_远景道路"},
    {"类型名称": "控制绿化线", "类型编码": "KZLHX", "图层名称": "GZW_虚位控制绿地"},
    {"类型名称": "虚位控制河道", "类型编码": "XWKZHD", "图层名称": "GZW_虚位控制河道"},
    {"类型名称": "虚位控制道路", "类型编码": "XWKZDL", "图层名称": "GZW_虚位控制道路"},
    {"类型名称": "景观控制廊道线", "类型编码": "JGKZLD", "图层名称": "GZW_景观控制廊道"},
    {"类型名称": "其他控制线", "类型编码": "QT", "图层名称": "GZW_其他控制线"},
]


def 入库_控制线(
    单元名称="临江单元",
    批复时间="",
    批复文号="",
    地块要素名称="DIST_用地规划图",
    道路中线要素名称="DL_道路中线",
    道路边线要素名称="DL_道路边线",
    输出要素名称="XG_KZX",
):
    日志生成器.临时开启日志()
    控制线要素 = 要素类.要素创建_通过名称(要素类型="线")

    要素类.字段添加(控制线要素, "DYMC", "字符串", 50, "规划编制单元名称")
    要素类.字段添加(控制线要素, "PFSJ", "日期", None, "批复时间")
    要素类.字段添加(控制线要素, "PFWH", "字符串", 50, "批复文号")

    要素类.字段添加(控制线要素, "LXDM", "字符串", 20, "控制线类型代码")
    要素类.字段添加(控制线要素, "LXMC", "字符串", 50, "控制线类型名称")

    要素类.字段添加(控制线要素, "MC", "字符串", 50, "对象名称")
    要素类.字段添加(控制线要素, "ZT", "字符串", 10, "状态")

    要素类.字段添加(控制线要素, "BZ", "字符串", 255, "备注")

    操作字段列表 = ["_形状", "LXDM", "LXMC", "MC", "ZT", "BZ"]
    with 游标类.游标创建("插入", 控制线要素, 操作字段列表) as 游标1:
        # 道路中线录入
        道路中线要素 = 要素类.要素创建_通过复制(道路中线要素名称)
        道路中线操作字段列表 = ["_形状", "道路名称", "道路等级", "开发动态", "备注说明", "控制线类型", "控制线名称", "控制线备注", "控制线开发动态"]
        with 游标类.游标创建("查询", 道路中线要素, 道路中线操作字段列表) as 游标2:
            for x in 游标类.属性获取_数据_字典形式(游标2, 道路中线操作字段列表):
                y = {}
                if x["道路等级"] in ["公路"]:
                    y["LXDM"] = "DLZX-GL"
                    y["LXMC"] = "道路中心线-公路"
                elif x["道路等级"] in ["城市快速路"]:
                    y["LXDM"] = "DLZX-KS"
                    y["LXMC"] = "道路中心线-快速路"
                elif x["道路等级"] in ["一级城市主干路", "普通城市主干路", "城市主干路"]:
                    y["LXDM"] = "DLZX-ZG"
                    y["LXMC"] = "道路中心线-主干路"
                elif x["道路等级"] in ["城市次干路"]:
                    y["LXDM"] = "DLZX-CG"
                    y["LXMC"] = "道路中心线-次干路"
                elif x["道路等级"] in ["城市支路"]:
                    y["LXDM"] = "DLZX-ZL"
                    y["LXMC"] = "道路中心线-支路"
                elif x["控制线类型"] not in [None, "", " "]:
                    控制线预设字典列表 = [z for z in 控制线类型与名称映射 if z["类型名称"] == x["控制线类型"]]
                    if len(控制线预设字典列表) != 1:
                        raise Exception("控制线类型与名称映射错误")
                    else:
                        控制线预设字典 = 控制线预设字典列表[0]
                    y["LXDM"] = 控制线预设字典["类型编码"]
                    y["LXMC"] = 控制线预设字典["类型名称"]
                else:
                    raise Exception(f"未识别到【{x['道路等级']}】对应的类型代码和类型名称")

                if x["道路名称"] not in [None, "", " "]:
                    y["MC"] = x["道路名称"]
                elif x["控制线名称"] not in [None, "", " "]:
                    y["MC"] = x["控制线名称"]
                else:
                    raise Exception(f"未识别到控制线名称")

                if x["开发动态"] in ["规划", "新增", "改建"]:
                    y["ZT"] = "规划"
                elif x["开发动态"] in ["现状", "规划未实施"]:
                    y["ZT"] = "现状"
                elif x["控制线开发动态"] in ["规划", "新增", "改建"]:
                    y["ZT"] = "规划"
                elif x["控制线开发动态"] in ["现状", "规划未实施"]:
                    y["ZT"] = "现状"
                else:
                    from bxarcpy.环境包 import 输入输出类

                    输入输出类.输出消息(f'似乎有道路中线开发动态未识别到，开发动态是{x["开发动态"]}')
                    y["ZT"] = x["开发动态"]

                if x["备注说明"] not in [None, "", " "]:
                    y["BZ"] = x["备注说明"]
                elif x["控制线备注"] not in [None, "", " "]:
                    y["BZ"] = x["控制线备注"]
                else:
                    y["BZ"] = x["备注说明"]

                y["_形状"] = x["_形状"]
                游标类.行插入_字典形式(游标1, y, 操作字段列表=操作字段列表)

        # 道路边线录入
        道路边线要素 = 要素类.要素创建_通过复制(道路边线要素名称)
        道路边线操作字段列表 = ["_形状", "道路名称", "道路等级", "开发动态", "备注说明", "控制线类型", "控制线名称", "控制线备注", "控制线开发动态"]
        with 游标类.游标创建("查询", 道路边线要素, 道路边线操作字段列表) as 游标2:
            for x in 游标类.属性获取_数据_字典形式(游标2, 道路边线操作字段列表):
                y = {}
                if x["道路等级"] in ["公路"]:
                    y["LXDM"] = "DLBX-GL"
                    y["LXMC"] = "道路边线-公路"
                elif x["道路等级"] in ["城市快速路"]:
                    y["LXDM"] = "DLBX-KS"
                    y["LXMC"] = "道路边线-快速路"
                elif x["道路等级"] in ["一级城市主干路", "普通城市主干路", "城市主干路"]:
                    y["LXDM"] = "DLBX-ZG"
                    y["LXMC"] = "道路边线-主干路"
                elif x["道路等级"] in ["城市次干路"]:
                    y["LXDM"] = "DLBX-CG"
                    y["LXMC"] = "道路边线-次干路"
                elif x["道路等级"] in ["城市支路"]:
                    y["LXDM"] = "DLBX-ZL"
                    y["LXMC"] = "道路边线-支路"
                elif x["控制线类型"] not in [None, "", " "]:
                    控制线预设字典列表 = [z for z in 控制线类型与名称映射 if z["类型名称"] == x["控制线类型"]]
                    if len(控制线预设字典列表) != 1:
                        raise Exception("控制线类型与名称映射错误")
                    else:
                        控制线预设字典 = 控制线预设字典列表[0]
                    y["LXDM"] = 控制线预设字典["类型编码"]
                    y["LXMC"] = 控制线预设字典["类型名称"]
                else:
                    raise Exception(f"未识别到【{x['道路等级']}】对应的类型代码和类型名称")

                if x["道路名称"] not in [None, "", " "]:
                    y["MC"] = x["道路名称"]
                elif x["控制线名称"] not in [None, "", " "]:
                    y["MC"] = x["控制线名称"]
                else:
                    raise Exception(f"未识别到控制线名称")

                if x["开发动态"] in ["规划", "新增", "改建"]:
                    y["ZT"] = "规划"
                elif x["开发动态"] in ["现状", "规划未实施"]:
                    y["ZT"] = "现状"
                elif x["控制线开发动态"] in ["规划", "新增", "改建"]:
                    y["ZT"] = "规划"
                elif x["控制线开发动态"] in ["现状", "规划未实施"]:
                    y["ZT"] = "现状"
                else:
                    from bxarcpy.环境包 import 输入输出类

                    输入输出类.输出消息(f'似乎有道路边线开发动态未识别到，开发动态是{x["开发动态"]}')
                    y["ZT"] = x["开发动态"]

                if x["备注说明"] not in [None, "", " "]:
                    y["BZ"] = x["备注说明"]
                elif x["控制线备注"] not in [None, "", " "]:
                    y["BZ"] = x["控制线备注"]
                else:
                    y["BZ"] = x["备注说明"]

                y["_形状"] = x["_形状"]
                游标类.行插入_字典形式(游标1, y, 操作字段列表=操作字段列表)

        from bxarcpy.数据库包 import 数据库类

        数据库 = 基本信息.项目信息.工作空间
        数据库中要素列表 = 数据库类.属性获取_要素名称列表(数据库)

        if "GZW_绿化线" not in 数据库中要素列表 and 地块要素名称:
            # 绿化线录入
            地块要素 = 要素类.要素创建_通过复制(地块要素名称)
            地块要素 = 要素类.要素创建_通过面转线(地块要素, 是否识别并存储面邻域信息=False)
            with 游标类.游标创建("查询", 地块要素, ["_形状", "地类编号", "开发动态", "备注说明"]) as 游标2:
                from bxpy.基本对象包 import 字类

                for x in 游标类.属性获取_数据_字典形式(游标2, ["_形状", "地类编号", "开发动态", "备注说明"]):
                    y = {}
                    if 字类.匹配正则(x["地类编号"], r".*(1401|1402).*"):
                        y["LXDM"] = "LHX"
                        y["LXMC"] = "绿化线"
                        y["MC"] = ""
                        if x["开发动态"] in ["新建", "规划", "改/扩建"]:
                            y["ZT"] = "规划"
                        elif x["开发动态"] in ["保留", "现状"]:
                            y["ZT"] = "现状"
                        else:
                            from bxarcpy.环境包 import 输入输出类

                            输入输出类.输出消息(f'绿化线的开发动态似乎有值没有被转换为【现状】或者【规划】，获取的值是{x["开发动态"]}')
                            y["ZT"] = x["开发动态"]
                        y["BZ"] = x["备注说明"]
                        y["_形状"] = x["_形状"]
                        游标类.行插入_字典形式(游标1, y, 操作字段列表=操作字段列表)

        已读取列表 = ["DL_道路中线", "DL_道路边线"]
        for 控制线预设字典 in 控制线类型与名称映射:
            if 控制线预设字典["图层名称"] not in 数据库中要素列表 or 控制线预设字典["图层名称"] in 已读取列表:
                from bxarcpy.环境包 import 输入输出类

                输入输出类.输出消息(f'跳过了{控制线预设字典["图层名称"]}')
                continue

            from bxarcpy.环境包 import 输入输出类

            已读取列表.append(控制线预设字典["图层名称"])
            输入输出类.输出消息(f'开始读取{控制线预设字典["图层名称"]}')
            控制线要素B = 要素类.要素创建_通过复制(控制线预设字典["图层名称"])
            with 游标类.游标创建("查询", 控制线要素B, ["_形状", "控制线类型", "控制线名称", "控制线备注", "控制线开发动态"]) as 游标2:
                for x in 游标类.属性获取_数据_字典形式(游标2, ["_形状", "控制线类型", "控制线名称", "控制线备注", "控制线开发动态"]):
                    y = {}
                    y["LXMC"] = x["控制线类型"]

                    控制线预设字典B列表 = [z for z in 控制线类型与名称映射 if z["类型名称"] == x["控制线类型"]]
                    if len(控制线预设字典B列表) != 1:
                        raise Exception("控制线类型与名称映射错误")
                    else:
                        控制线预设字典B = 控制线预设字典B列表[0]
                    y["LXDM"] = 控制线预设字典B["类型编码"]

                    y["MC"] = x["控制线名称"]

                    if x["控制线开发动态"] in ["新建", "规划", "改/扩建"]:
                        y["ZT"] = "规划"
                    elif x["控制线开发动态"] in ["保留", "现状"]:
                        y["ZT"] = "现状"
                    else:
                        from bxarcpy.环境包 import 输入输出类

                        输入输出类.输出消息(f'控制线的开发动态似乎有值没有被转换为【现状】或者【规划】，获取的值是{x["控制线开发动态"]}')
                        y["ZT"] = x["控制线开发动态"]

                    y["BZ"] = x["控制线备注"]
                    y["_形状"] = x["_形状"]
                    游标类.行插入_字典形式(游标1, y, 操作字段列表=操作字段列表)

        # 市政管线录入
        # if 市政管线要素名称:
        #     市政管线要素 = 要素类.要素创建_通过复制(市政管线要素名称)
        #     with 游标类.游标创建("查询", 市政管线要素, ["_形状", "类型", "开发动态", "备注"]) as 游标2:
        #         for x in 游标类.属性获取_数据_字典形式(游标2, ["_形状", "类型", "开发动态", "备注"]):
        #             y = {}
        #             if x["类型"] == "给水":
        #                 y["LXDM"] = "GX-S"
        #                 y["LXMC"] = "自来水管线"
        #                 y["MC"] = ""
        #             elif x["类型"] == "污水":
        #                 y["LXDM"] = "GX-W"
        #                 y["LXMC"] = "污水管线"
        #                 y["MC"] = ""
        #             elif x["类型"] == "雨水":
        #                 y["LXDM"] = "GX-Y"
        #                 y["LXMC"] = "雨水管线"
        #                 y["MC"] = ""
        #             elif x["类型"] == "电力":
        #                 y["LXDM"] = "GX-D"
        #                 y["LXMC"] = "地下电力管线"
        #                 y["MC"] = x["等级"]
        #             elif x["类型"] == "燃气":
        #                 y["LXDM"] = "GX-Q"
        #                 y["LXMC"] = "中压燃气管线"
        #                 y["MC"] = ""
        #             elif x["类型"] == "热力":
        #                 y["LXDM"] = "RL"
        #                 y["LXMC"] = "热力管线"
        #                 y["MC"] = ""
        #             elif x["类型"] == "电信":
        #                 y["LXDM"] = "TX"
        #                 y["LXMC"] = "通信管线"
        #                 y["MC"] = ""
        #             if x["开发动态"] in ["规划", "新增", "改建"]:
        #                 y["ZT"] = "规划"
        #             elif x["开发动态"] in ["现状", "规划未实施"]:
        #                 y["ZT"] = "现状"
        #             else:
        #                 from bxarcpy.环境包 import 输入输出类

        #                 输入输出类.输出消息(f'似乎有市政管线开发动态未识别到，开发动态是{x["开发动态"]}')
        #                 y["ZT"] = x["开发动态"]
        #             y["BZ"] = x["备注说明"]
        #             y["_形状"] = x["_形状"]
        #             游标类.行插入_字典形式(游标1, y, 操作字段列表=操作字段列表)

        # # 控制管线录入
        # for 控制线x in 控制线列表:
        #     日志生成器.输出调试(f"开始添加以下控制线类型：{控制线x}")
        #     要素名称 = 要素类.要素创建_通过复制(控制线x["要素路径"])
        #     控制线操作字段列表 = [x[0] for x in 控制线x["字段映射"]]
        #     控制线操作字段列表.append("_形状")
        #     with 游标类.游标创建("查询", 要素名称, 控制线操作字段列表) as 游标:
        #         for 游标数据 in 游标类.属性获取_数据_字典形式(游标, 控制线操作字段列表):
        #             y = {}
        #             y["_形状"] = 游标数据["_形状"]
        #             y["LXDM"] = 控制线x["类型代码"]
        #             y["LXMC"] = 控制线x["类型名称"]
        #             for i in 控制线x["字段映射"]:
        #                 if i[0] == "开发动态":
        #                     if 游标数据["开发动态"] in ["规划", "新增", "改建"]:
        #                         y["ZT"] = "规划"
        #                     elif 游标数据["开发动态"] in ["现状", "规划未实施"]:
        #                         y["ZT"] = "现状"
        #                     else:
        #                         from bxarcpy.环境包 import 输入输出类

        #                         输入输出类.输出消息(f'{控制线x}似乎有开发动态未识别到，开发动态是{游标数据["开发动态"]}')
        #                         y["ZT"] = 游标数据["开发动态"]
        #                     continue
        #                 y[i[1]] = 游标数据[i[0]]
        #             y.setdefault("MC", "")
        #             y.setdefault("ZT", "")
        #             y.setdefault("BZ", "")
        #             游标类.行插入_字典形式(游标1, y, 操作字段列表)

    要素类.字段计算(控制线要素, "DYMC", f"'{单元名称}'")
    要素类.字段计算(控制线要素, "PFSJ", f"'{批复时间}'")
    要素类.字段计算(控制线要素, "PFWH", f"'{批复文号}'")
    要素类.字段删除(控制线要素, 保留字段名称列表=["DYMC", "PFSJ", "PFWH", "LXDM", "LXMC", "MC", "ZT", "BZ"])

    控制线要素 = 要素类.要素创建_通过裁剪(控制线要素, 基本信息.项目信息.JX_规划范围线要素名称)

    if "XG" not in 数据库类.属性获取_要素数据集名称列表(基本信息.项目信息.工作空间):
        要素数据集 = 要素数据集类.要素数据集创建("XG")

    输出要素 = 要素类.要素创建_通过复制并重命名重名要素(控制线要素, f"XG/" + 输出要素名称)

    if "XG_KZX" in 数据库类.属性获取_要素名称列表(数据库 + "/XG"):
        from bxgis.属性.属性对比 import 属性对比

        字段名称列表 = 要素类.字段名称列表获取("XG/XG_KZX", 含系统字段=False)
        对比字段名称列表 = [[x, x] for x in 字段名称列表]
        属性对比(
            输入要素路径1="XG/XG_KZX",
            输入要素路径2=控制线要素,
            映射字段名称列表=["_长度", "_长度"],
            对比字段名称列表=对比字段名称列表,
        )

    return 输出要素


if __name__ == "__main__":
    日志处理器.输出器_文件对象_路径 = r"C:\Users\beixiao\Desktop\控制线.txt"
    日志生成器.开启()
    # 工作空间 = r"C:\Users\common\project\F富阳受降控规\受降北_数据库.gdb"
    工作空间 = r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb"
    with 环境管理器类.环境管理器类创建(工作空间):
        入库_控制线(
            单元名称=基本信息.项目信息.单元名称,
            批复时间=基本信息.项目信息.批复时间,
            批复文号=基本信息.项目信息.批复文号,
            地块要素名称="DIST_用地规划图",
            道路中线要素名称="DL_道路中线",
            道路边线要素名称="DL_道路边线",
            输出要素名称="XG_KZX1",
        )
