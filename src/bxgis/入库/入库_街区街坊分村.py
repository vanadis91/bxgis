# -*- coding: utf-8 -*-

import bxarcpy
from typing import Literal, List
import bxarcpy.工具包 as 工具包
from bxarcpy.要素包 import 要素类
from bxpy.日志包 import 日志生成器, 日志处理器
from bxarcpy.游标包 import 游标类
from bxarcpy.数据库包 import 数据库类
from bxarcpy.要素数据集包 import 要素数据集类
from bxarcpy.环境包 import 环境管理器类, 输入输出类
from bxgis.配置 import 基本信息


def 入库_街区街坊分村(
    区域要素名称列表=["JX_街区范围线", "JX_街坊范围线"],
    单元名称="临江单元",
    层级列表: List[Literal["街区", "街坊", "分村"]] = ["街区", "街坊"],
    区域编号字段名称="区域编号",
    区域主导属性字段名称="区域主导属性",
    总城镇居住人数字段名称="总城镇居住人数",
    总建筑面积字段名称="总建筑面积",
    总住宅建筑面积字段名称="总住宅建筑面积",
    总工业建筑面积字段名称="总工业建筑面积",
    总商服建筑面积字段名称="总商服建筑面积",
    总村庄户籍人数字段名称="总村庄户籍人数",
    总村庄居住人数字段名称="总村庄居住人数",
    总耕地保有量字段名称="总耕地保有量",
    总永久基本农田用地面积字段名称="总永久基本农田用地面积",
    总生态保护红线用地面积字段名称="总生态保护红线用地面积",
    总村庄建设边界用地面积字段名称="总村庄建设边界用地面积",
    总城乡建设用地面积字段名称="总城乡建设用地面积",
    总村庄建设用地面积字段名称="总村庄建设用地面积",
    输出要素名称="XG_JQJF",
):
    # print(f"当前层级是：{层级}")
    区域要素名称列表temp = []
    for 区域要素名称, 层级 in zip(区域要素名称列表, 层级列表):
        区域要素 = 要素类.要素创建_通过复制(区域要素名称)
        区域要素名称列表temp.append(区域要素)

        要素类.字段添加(区域要素, "DYMC", "字符串", 50, "规划编制单元名称")
        要素类.字段计算(区域要素, "DYMC", f"'{单元名称}'")
        要素类.字段添加(区域要素, "CJ", "字符串", 10, "层级")
        要素类.字段计算(区域要素, "CJ", f"'{层级}'")
        要素类.字段添加(区域要素, "BM", "字符串", 10, "编码")
        要素类.字段计算(区域要素, "BM", f"!{区域编号字段名称}!")

        # 街区、街坊类型在“生态型、创新型、综合型、产业型、居住型、其他型”6 种类型中进行选择填写；分村类型在“集聚建设类、整治提升类、城郊融合类、特色保护类、精明收缩类”5 种类型中进行选择填写
        要素类.字段添加(区域要素, "LX", "字符串", 10, "类型")
        要素类.字段计算(区域要素, "LX", f"!{区域主导属性字段名称}!")

        要素类.字段添加(区域要素, "MJ", "双精度", 50, "面积")
        要素类.字段计算(区域要素, "MJ", "round(!Shape_Area!/10000, 4)")

        要素类.字段添加(区域要素, "RK", "双精度", 50, f"城镇人口规模")
        要素类.字段计算(区域要素, "RK", f"round(float(!{总城镇居住人数字段名称}!)/10000,4)")
        要素类.字段添加(区域要素, "JZZL", "双精度", 50, f"街坊建筑总量")
        要素类.字段计算(区域要素, "JZZL", f"round(float(!{总建筑面积字段名称}!)/10000,4)")
        要素类.字段添加(区域要素, "ZZZL", "双精度", 50, f"街坊住宅总量")
        要素类.字段计算(区域要素, "ZZZL", f"round(float(!{总住宅建筑面积字段名称}!)/10000,4)")
        要素类.字段添加(区域要素, "GYZL", "双精度", 50, f"街坊工业总量")
        要素类.字段计算(区域要素, "GYZL", f"round(float(!{总工业建筑面积字段名称}!)/10000,4)")
        要素类.字段添加(区域要素, "SYZL", "双精度", 50, f"街坊商业商务总量")
        要素类.字段计算(区域要素, "SYZL", f"round(float(!{总商服建筑面积字段名称}!)/10000,4)")

        要素类.字段添加(区域要素, "HJRK", "双精度", 50, f"分村户籍人口")
        要素类.字段计算(区域要素, "HJRK", f"round(float(!{总村庄户籍人数字段名称}!)/10000,4)")
        要素类.字段添加(区域要素, "CZRK", "双精度", 50, f"分村常住人口")
        要素类.字段计算(区域要素, "CZRK", f"round(float(!{总村庄居住人数字段名称}!)/10000,4)")
        要素类.字段添加(区域要素, "GD", "双精度", 50, f"耕地保有量")
        要素类.字段计算(区域要素, "GD", f"round(float(!{总耕地保有量字段名称}!)/10000,4)")
        要素类.字段添加(区域要素, "YN", "双精度", 50, f"永久基本农田面积")
        要素类.字段计算(区域要素, "YN", f"round(float(!{总永久基本农田用地面积字段名称}!)/10000,4)")
        要素类.字段添加(区域要素, "ST", "双精度", 50, f"生态保护红线面积")
        要素类.字段计算(区域要素, "ST", f"round(float(!{总生态保护红线用地面积字段名称}!)/10000,4)")
        要素类.字段添加(区域要素, "CZBJ", "双精度", 50, f"村庄建设边界面积")
        要素类.字段计算(区域要素, "CZBJ", f"round(float(!{总村庄建设边界用地面积字段名称}!)/10000,4)")
        要素类.字段添加(区域要素, "CXMJ", "双精度", 50, f"城乡建设用地面积")
        要素类.字段计算(区域要素, "CXMJ", f"round(float(!{总城乡建设用地面积字段名称}!)/10000,4)")
        要素类.字段添加(区域要素, "CZMJ", "双精度", 50, f"村庄建设用地面积")
        要素类.字段计算(区域要素, "CZMJ", f"round(float(!{总村庄建设用地面积字段名称}!)/10000,4)")

        要素类.字段添加(区域要素, "BZ", "字符串", 255, "备注")

        if "分村" not in 层级:
            # 要素类.字段删除(合并后要素, ["HJRK", "CZRK", "GD", "CZBJ", "CXMJ", "CZMJ"])
            要素类.字段计算(区域要素, "HJRK", "0")
            要素类.字段计算(区域要素, "CZRK", "0")
            要素类.字段计算(区域要素, "GD", "0")
            要素类.字段计算(区域要素, "CZBJ", "0")
            要素类.字段计算(区域要素, "CXMJ", "0")
            要素类.字段计算(区域要素, "CZMJ", "0")
        if "街区" not in 层级 and "街坊" not in 层级:
            # 要素类.字段删除(合并后要素, ["RK", "JZZL", "ZZZL", "GYZL", "SYZL"])
            要素类.字段计算(区域要素, "RK", "0")
            要素类.字段计算(区域要素, "JZZL", "0")
            要素类.字段计算(区域要素, "ZZZL", "0")
            要素类.字段计算(区域要素, "GYZL", "0")
            要素类.字段计算(区域要素, "SYZL", "0")

        要素类.字段删除(区域要素, 保留字段名称列表=["DYMC", "CJ", "BM", "LX", "MJ", "RK", "JZZL", "ZZZL", "GYZL", "SYZL", "HJRK", "CZRK", "GD", "YN", "ST", "CZBJ", "CXMJ", "CZMJ", "BZ"])

    合并后要素 = 要素类.要素创建_通过合并(区域要素名称列表temp)

    数据库 = 基本信息.项目信息.工作空间
    if "XG" not in 数据库类.属性获取_要素数据集名称列表(数据库):
        要素数据集 = 要素数据集类.要素数据集创建("XG")

    if "XG_JQJF" in 数据库类.属性获取_要素名称列表(数据库 + "/XG"):
        from bxgis.属性.属性对比 import 属性对比

        字段名称列表 = 要素类.字段名称列表获取("XG/XG_JQJF", 含系统字段=False)
        对比字段名称列表 = [[x, x] for x in 字段名称列表]
        属性对比(
            输入要素路径1="XG/XG_JQJF",
            输入要素路径2=合并后要素,
            映射字段名称列表=["BM", "BM"],
            对比字段名称列表=对比字段名称列表,
        )

    输出要素 = 要素类.要素创建_通过复制并重命名重名要素(合并后要素, f"XG/{输出要素名称}")
    return 输出要素


if __name__ == "__main__":
    日志生成器.开启()
    日志处理器.输出器_文件对象_路径 = r"C:\Users\beixiao\Desktop\debug.txt"
    工作空间 = r"C:\Users\common\project\F富阳受降控规\受降北_数据库.gdb"
    # 工作空间 = r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb"
    with 环境管理器类.环境管理器类创建(工作空间):
        入库_街区街坊分村(
            区域要素名称列表=["JX_街区范围线", "JX_街坊范围线", "JX_分村范围线"],
            单元名称=基本信息.项目信息.单元名称,
            层级列表=["街区", "街坊", "分村"],
            输出要素名称="XG_JQJF1",
        )
