# *-* coding:utf8 *-*

from bxpy.日志包 import 日志生成器, 日志处理器
from bxpy.基本对象包 import 字类, 字典类, 浮类
from typing import Union, Literal, Optional, List
import bxarcpy.工具包 as 工具包
from bxarcpy.要素包 import 要素类, 字段类
from bxarcpy.游标包 import 游标类
from bxarcpy.几何包 import 几何类
from bxarcpy.数据库包 import 数据库类
from bxarcpy.要素数据集包 import 要素数据集类
from bxarcpy.环境包 import 环境管理器类, 输入输出类
from bxgis.配置.配置包 import 配置类

基本信息 = 配置类.项目信息对象获取()
from bxgis.常用 import 属性更新


def 属性对比(
    输入要素路径1="DIST_用地规划图",
    输入要素路径2="DIST_用地规划图",
    映射字段名称列表=["_ID", "_ID"],
    是否导出变更项=False,
    对比字段名称列表=[["所属街区", "所属街区"], ["所属分村", "所属分村"]],
    转换为数字后进行对比的字段属性列表=[{"字段名称": "f9a2cfd5-d6c9-424c-b7df-976d1b2d94b5", "小数点后位数": 2}],
):
    输入要素1 = 要素类.要素创建_通过复制(输入要素路径1)
    输入要素2 = 要素类.要素创建_通过复制(输入要素路径2)

    要素1字段列表 = list(list(zip(*对比字段名称列表))[0])
    要素2字段列表 = list(list(zip(*对比字段名称列表))[1])
    if 映射字段名称列表[0] in 要素1字段列表:
        要素1字段列表.remove(映射字段名称列表[0])
    if 映射字段名称列表[1] in 要素2字段列表:
        要素2字段列表.remove(映射字段名称列表[1])
    操作字段名称列表1 = [映射字段名称列表[0], *要素1字段列表]
    操作字段名称列表2 = [映射字段名称列表[1], *要素2字段列表]

    if 是否导出变更项:
        if "_形状" not in 操作字段名称列表1:
            操作字段名称列表1.append("_形状")
        if "_形状" not in 操作字段名称列表2:
            操作字段名称列表2.append("_形状")

    要素1项列表 = 游标类.项列表获取(输入要素1, [映射字段名称列表[0]])
    要素1_映射字段列表 = [x[映射字段名称列表[0]] for x in 要素1项列表]
    要素2项列表 = 游标类.项列表获取(输入要素2, [映射字段名称列表[1]])
    要素2_映射字段列表 = [x[映射字段名称列表[1]] for x in 要素2项列表]

    if 是否导出变更项:
        变更要素1 = 要素类.要素创建_通过名称(要素类型="面", 模板=输入要素1)
        变更要素2 = 要素类.要素创建_通过名称(要素类型="面", 模板=输入要素2)
    是否有项不一致flag = False
    with 游标类.游标创建("查询", 输入要素1, 操作字段名称列表1) as 游标_要素1, 游标类.游标创建("查询", 输入要素2, 操作字段名称列表2) as 游标_要素2:
        for 要素1x in 游标类.属性获取_数据_字典形式(游标_要素1, 操作字段名称列表1):
            是否找到对应的项flag = False
            是否不同flag = False
            for 要素2x in 游标类.属性获取_数据_字典形式(游标_要素2, 操作字段名称列表2):
                # if 字类.转换_到字(要素1x[操作字段名称列表1[0]]) == 字类.转换_到字(要素2x[操作字段名称列表2[0]]):
                if 要素1x[操作字段名称列表1[0]] == 要素2x[操作字段名称列表2[0]]:
                    要素2_映射字段列表.remove(要素2x[操作字段名称列表2[0]])
                    是否找到对应的项flag = True

                    字符串 = f"{操作字段名称列表1[0]}为{要素1x[操作字段名称列表1[0]]}的项，"
                    for 字段1, 字段2 in zip(要素1字段列表, 要素2字段列表):
                        转换为数字后进行对比的字段对象列表 = [x for x in 转换为数字后进行对比的字段属性列表 if x["字段名称"] in [字段1, 字段2]]
                        if len(转换为数字后进行对比的字段对象列表) >= 1:
                            转换为数字后进行对比的字段对象 = 转换为数字后进行对比的字段对象列表[0]
                            数值1 = 字类.转换_到字(浮类.转换_到浮(要素1x[字段1]), 小数点后位数=转换为数字后进行对比的字段对象["小数点后位数"])
                            数值2 = 字类.转换_到字(浮类.转换_到浮(要素2x[字段2]), 小数点后位数=转换为数字后进行对比的字段对象["小数点后位数"])
                        else:
                            数值1 = 字类.转换_到字(要素1x[字段1])
                            数值2 = 字类.转换_到字(要素2x[字段2])
                        if 数值1 != 数值2:
                            是否不同flag = True
                            是否有项不一致flag = True
                            字符串 += f"{字段1}由{要素1x[字段1]}改为{要素2x[字段2]}，"
                    break
            游标类.重置(游标_要素2)
            if 是否不同flag:
                输入输出类.输出消息(字符串[0:-1])
            if not 是否找到对应的项flag:
                if 是否导出变更项:
                    with 游标类.游标创建("插入", 变更要素1, 操作字段名称列表1) as 游标_要素1:
                        游标类.行插入_字典形式(游标_要素1, 要素1x)
                输入输出类.输出消息(f"第一个要素中{操作字段名称列表1[0]}为{要素1x[操作字段名称列表1[0]]}的项被删除了，{要素1x}")
                是否有项不一致flag = True
        if len(要素2_映射字段列表) > 0:
            是否有项不一致flag = True
            with 游标类.游标创建("查询", 输入要素2, 操作字段名称列表2) as 游标_要素2:
                for 要素2x in 游标类.属性获取_数据_字典形式(游标_要素2, 操作字段名称列表2):
                    if 要素2x[操作字段名称列表2[0]] in 要素2_映射字段列表:
                        输入输出类.输出消息(f"第二个要素中{操作字段名称列表2[0]}为{要素2x[操作字段名称列表2[0]]}的项是新增项，{要素2x}")
                        if 是否导出变更项:
                            with 游标类.游标创建("插入", 变更要素2, 操作字段名称列表2) as 游标_要素2:
                                游标类.行插入_字典形式(游标_要素2, 要素2x)
    if 是否导出变更项:
        变更要素_合并后 = 要素类.要素创建_通过合并([变更要素1, 变更要素2])
        要素类.要素创建_通过复制并重命名重名要素(变更要素_合并后, "AA_变更要素_合并后")
    if not 是否有项不一致flag:
        输入输出类.输出消息("进行对比的两个要素的项内容完全一致。")
    return None


if __name__ == "__main__":
    工作空间 = r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb"
    # 工作空间 = r"C:\Users\beixiao\Project\F富阳受降控规\受降北_数据库.gdb"
    # 工作空间 = r"C:\Users\beixiao\Project\F富阳受降控规\0.资料\7.流程_24.06.13_质检\富阳区受降北单元入库数据.gdb"
    工作空间 = r"C:\Users\common\Project\D德清洛舍杨树湾单元控规\03过程文件\24.11.27报批稿\D德清洛舍杨树湾单元控规_数据库.gdb"
    with 环境管理器类.环境管理器类创建(工作空间):
        属性对比()
