# -*- coding: utf-8 -*-

import bxarcpy


def 用途分区规划图生成(
    规划用地要素名称="DIST_用地规划图",
    现状用地要素名称="DIST_用地现状图",
    农田整备要素名称列表=["YD_上位_粮食生产功能区", "YD_上位农用地落实_耕地质量提升"],
    城镇集建区要素名称="KZX_城镇集建区",
    城镇弹性区要素名称="KZX_城镇弹性区",
    永久基本农田要素名称="KZX_永久基本农田",
    城镇开发边界外集建区修改要素名称="YT_城镇开发边界外集建区修改",
    其他需要叠合的要素名称列表=[],
    输出要素名称="DIST_用途分区规划图",
):
    from bxgis import 配置

    规划用地要素 = bxarcpy.要素类.要素读取_通过名称(规划用地要素名称).要素创建_通过复制()
    现状用地要素 = bxarcpy.要素类.要素读取_通过名称(现状用地要素名称).要素创建_通过复制()

    城镇集建区要素 = bxarcpy.要素类.要素读取_通过名称(城镇集建区要素名称).要素创建_通过复制().字段添加(配置.控制线要素字段映射.控制线名称字段名称).字段删除(保留字段名称列表=[配置.控制线要素字段映射.控制线名称字段名称]).字段计算(配置.控制线要素字段映射.控制线名称字段名称, "'城镇集中建设区'")
    城镇弹性区要素 = bxarcpy.要素类.要素读取_通过名称(城镇弹性区要素名称).要素创建_通过复制().字段添加(配置.控制线要素字段映射.控制线名称字段名称).字段删除(保留字段名称列表=[配置.控制线要素字段映射.控制线名称字段名称]).字段计算(配置.控制线要素字段映射.控制线名称字段名称, "'城镇弹性发展区'")
    城镇开发边界要素 = 城镇集建区要素.要素创建_通过合并([城镇弹性区要素.名称])

    规划用地要素.字段删除(保留字段名称列表=[配置.地块要素字段映射.地类编号字段名称]).字段修改(配置.地块要素字段映射.地类编号字段名称, 配置.地块要素字段映射.地类编号字段名称 + "_规划")
    现状用地要素.字段删除(保留字段名称列表=[配置.地块要素字段映射.地类编号字段名称]).字段修改(配置.地块要素字段映射.地类编号字段名称, 配置.地块要素字段映射.地类编号字段名称 + "_现状")
    用地要素 = 规划用地要素.要素创建_通过联合([现状用地要素.名称])
    用地要素.字段删除(保留字段名称列表=[配置.地块要素字段映射.地类编号字段名称 + "_规划", 配置.地块要素字段映射.地类编号字段名称 + "_现状"]).字段添加(配置.分区要素字段映射.分区名称字段名称)

    # 将地类编号映射为用途管制分区
    from bxpy.系统包 import 系统类
    from bxpy.路径包 import 路径类

    当前文件所在目录 = 路径类.属性获取_目录(__file__)
    转换文件路径 = 路径类.转绝对("..\\", 当前文件所在目录)
    转换文件路径 = 路径类.连接(转换文件路径, "config", "地类转换_地类与用途分区转换.xls")
    import bxpandas as pd

    a = pd.转换.excel文件转数据框架(转换文件路径, 要读取的列=[0, 1], 数据类型={"新地类编号": str, "用途管制分区1": str})
    用途管制分区映射 = pd.转换.数据框架转字典(a)
    with bxarcpy.游标类.游标创建_通过名称("更新", 用地要素.名称, [配置.地块要素字段映射.地类编号字段名称 + "_规划", 配置.分区要素字段映射.分区名称字段名称]) as 游标:
        是否存在无对应用途管制分区的地类flag = False
        for x in 游标:
            对应的对象列表 = [y for y in 用途管制分区映射 if y["新地类编号"] == x["地类编号_规划"]]
            if len(对应的对象列表) > 0:
                x[配置.分区要素字段映射.分区名称字段名称] = 对应的对象列表[0]["用途管制分区1"]
                游标.行更新(x)
            else:
                bxarcpy.环境.输出消息(f"未找到地类编号 {x[配置.地块要素字段映射.地类编号字段名称 + '_规划']} 对应的用途管制分区")
                是否存在无对应用途管制分区的地类flag = True
    if 是否存在无对应用途管制分区的地类flag:
        raise ValueError("程序中断，部分地类未找到对应的用途管制分区。")

    # 梳理哪些属于农田整备区
    with bxarcpy.游标类.游标创建_通过名称("更新", 用地要素.名称, [配置.地块要素字段映射.地类编号字段名称 + "_现状", 配置.地块要素字段映射.地类编号字段名称 + "_规划", 配置.分区要素字段映射.分区名称字段名称]) as 游标:
        from bxpy.基本对象包 import 字类

        for x in 游标:
            if 字类.匹配正则(x[配置.地块要素字段映射.地类编号字段名称 + "_现状"], "^(?!01).*") and 字类.匹配正则(x[配置.地块要素字段映射.地类编号字段名称 + "_规划"], "^01.*"):
                x[配置.分区要素字段映射.分区名称字段名称] = "农田整备区"
                游标.行更新(x)

    for x in 农田整备要素名称列表:
        农田整备要素 = bxarcpy.要素类.要素读取_通过名称(x).要素创建_通过复制()
        农田整备要素.字段添加("用途管制分区_temp1").字段计算("用途管制分区_temp1", '"农田整备区"').字段删除(保留字段名称列表=["用途管制分区_temp1"])
        仅有农田的用地要素 = 用地要素.要素创建_通过筛选(f"{配置.地块要素字段映射.地类编号字段名称 + '_规划'} LIKE '01%'")
        相交后要素 = 仅有农田的用地要素.要素创建_通过相交([农田整备要素.名称], 输出字段设置="除FID外所有字段")
        with bxarcpy.游标类.游标创建_通过名称("更新", 相交后要素.名称, [配置.分区要素字段映射.分区名称字段名称, "用途管制分区_temp1"]) as 游标:
            for x in 游标:
                if x["用途管制分区_temp1"] not in [None, "", " "]:
                    x[配置.分区要素字段映射.分区名称字段名称] = x["用途管制分区_temp1"]
                    游标.行更新(x)
        相交后要素.字段删除(保留字段名称列表=[配置.地块要素字段映射.地类编号字段名称 + "_现状", 配置.地块要素字段映射.地类编号字段名称 + "_规划", 配置.分区要素字段映射.分区名称字段名称])
        用地要素 = 用地要素.要素创建_通过更新并合并字段(相交后要素.名称)

    # 处理永久基本农田
    永久基本农田要素 = bxarcpy.要素类.要素读取_通过名称(永久基本农田要素名称).要素创建_通过复制()
    永久基本农田要素.字段添加("用途管制分区_temp1").字段计算("用途管制分区_temp1", '"永久基本农田一般区"').字段删除(保留字段名称列表=["用途管制分区_temp1"])
    相交后要素 = 用地要素.要素创建_通过联合([永久基本农田要素.名称])
    with bxarcpy.游标类.游标创建_通过名称("更新", 相交后要素.名称, [配置.分区要素字段映射.分区名称字段名称, "用途管制分区_temp1"]) as 游标:
        for x in 游标:
            if x["用途管制分区_temp1"] not in [None, "", " "]:
                x[配置.分区要素字段映射.分区名称字段名称] = x["用途管制分区_temp1"]
                游标.行更新(x)
    相交后要素.字段删除(保留字段名称列表=[配置.地块要素字段映射.地类编号字段名称 + "_现状", 配置.地块要素字段映射.地类编号字段名称 + "_规划", 配置.分区要素字段映射.分区名称字段名称])
    用地要素 = 相交后要素

    # 处理城镇开发边界
    城镇开发边界要素 = bxarcpy.要素类.要素读取_通过名称(城镇开发边界要素.名称).要素创建_通过复制()
    城镇开发边界要素.字段添加("用途管制分区_temp1").字段计算("用途管制分区_temp1", f"!{配置.控制线要素字段映射.控制线名称字段名称}!").字段删除(保留字段名称列表=["用途管制分区_temp1"])
    相交后要素 = 用地要素.要素创建_通过联合([城镇开发边界要素.名称])
    with bxarcpy.游标类.游标创建_通过名称("更新", 相交后要素.名称, [配置.分区要素字段映射.分区名称字段名称, "用途管制分区_temp1"]) as 游标:
        for x in 游标:
            if x["用途管制分区_temp1"] not in [None, "", " "]:
                x[配置.分区要素字段映射.分区名称字段名称] = x["用途管制分区_temp1"]
                游标.行更新(x)
    相交后要素.字段删除(保留字段名称列表=[配置.地块要素字段映射.地类编号字段名称 + "_现状", 配置.地块要素字段映射.地类编号字段名称 + "_规划", 配置.分区要素字段映射.分区名称字段名称])
    用地要素 = 相交后要素

    # 梳理开发边界外的集建区
    城镇开发边界要素 = bxarcpy.要素类.要素读取_通过名称(城镇开发边界要素.名称).要素创建_通过复制()
    现有城镇开发边界外集建区修改要素 = bxarcpy.要素类.要素读取_通过名称(城镇开发边界外集建区修改要素名称).要素创建_通过复制()

    擦除城镇开发边界后要素 = 用地要素.要素创建_通过擦除(城镇开发边界要素.名称)

    需要修改用途的要素 = 擦除城镇开发边界后要素.要素创建_通过筛选(f"{配置.分区要素字段映射.分区名称字段名称} LIKE '城镇集中建设区' OR {配置.分区要素字段映射.分区名称字段名称} LIKE '城镇弹性发展区'")

    相交后元素 = 现有城镇开发边界外集建区修改要素.要素创建_通过相交([需要修改用途的要素.名称]).字段删除(保留字段名称列表=[配置.分区要素字段映射.分区名称字段名称])

    更新后要素 = 需要修改用途的要素.要素创建_通过更新(相交后元素.名称).字段删除(保留字段名称列表=[配置.分区要素字段映射.分区名称字段名称]).要素创建_通过多部件至单部件()

    更新后城镇开发边界外集建区修改要素 = 更新后要素.要素创建_通过复制并重命名重名要素(城镇开发边界外集建区修改要素名称)

    更新后仍需要修改用途的要素 = 更新后城镇开发边界外集建区修改要素.要素创建_通过筛选(f"{配置.分区要素字段映射.分区名称字段名称} LIKE '城镇集中建设区' OR {配置.分区要素字段映射.分区名称字段名称} LIKE '城镇弹性发展区'")
    if 更新后仍需要修改用途的要素.几何数量 > 0:
        bxarcpy.环境.输出消息(f"更新后城镇开发边界外集建区修改要素 中 存在 城镇集中建设区或者城镇弹性发展区")
    else:
        bxarcpy.环境.输出消息(f"更新后城镇开发边界外集建区修改要素 中 不存在 城镇集中建设区或者城镇弹性发展区")

    更新后仍需要修改用途的要素.字段修改(配置.分区要素字段映射.分区名称字段名称, "用途管制分区_temp1").字段删除(保留字段名称列表=["用途管制分区_temp1"])
    用地要素 = 用地要素.要素创建_通过联合并赋值字段(区域要素名称=更新后仍需要修改用途的要素.名称, 字段映射列表=[[配置.分区要素字段映射.分区名称字段名称, "用途管制分区_temp1"]], 是否检查两者差异=False, 差异是否输出到CAD=False)

    # 叠合其他要素
    for x in 其他需要叠合的要素名称列表:
        其他要素 = bxarcpy.要素类.要素读取_通过名称(x).要素创建_通过复制()
        用地要素 = 用地要素.要素创建_通过更新并合并字段(其他要素.名称)

    输出要素 = 用地要素.要素创建_通过复制并重命名重名要素(输出要素名称)
    return 输出要素


if __name__ == "__main__":
    工作空间 = r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb"
    with bxarcpy.环境.环境管理器(工作空间):
        用途分区规划图生成(
            规划用地要素名称="DIST_用地规划图",
            现状用地要素名称="DIST_用地现状图",
            农田整备要素名称列表=["YD_上位_粮食生产功能区", "YD_上位农用地落实_耕地质量提升"],
            城镇集建区要素名称="KZX_城镇集建区",
            城镇弹性区要素名称="KZX_城镇弹性区",
            永久基本农田要素名称="KZX_永久基本农田",
            城镇开发边界外集建区修改要素名称="YT_城镇开发边界外集建区修改",
            其他需要叠合的要素名称列表=[],
            输出要素名称="DIST_用途分区规划图",
        )
