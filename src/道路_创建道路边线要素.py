# -*- coding: utf-8 -*-

# import arcpy
# from sys import argv
import bxarcpy
from bxpy import 时间


def 道路_创建道路边线要素(道路中心要素名称, 地块要素名称="DIST_用地规划图", 范围要素名称="JX_规划范围线", 输出要素名称="DL_道路边线"):
    道路中线要素 = bxarcpy.要素类.要素读取_通过名称(道路中心要素名称).要素创建_通过复制()
    道路中线要素.字段添加("道路半宽", "单精度").字段计算("道路半宽", "float(!道路宽度!)*0.7")
    # 道路中线要素.要素创建_通过复制并重命名重名要素(道路中线要素名称)
    道路中线缓冲要素 = 道路中线要素.要素创建_通过缓冲("道路半宽", 融合类型="融合按字段", 融合字段名称列表=["道路等级", "道路名称"], 末端类型="方形")
    道路中线要素.字段删除(["道路半宽"])
    道路中线缓冲要素.字段删除(["道路半宽"])

    需操作的字段名称列表1 = ["OID@", "_形状", "道路等级", "道路名称"]
    代码块 = """def test(x):
if x == '城市次干路':
    return 3.0
elif x == '城市快速路':
    return 1.0
elif x == '城市支路':
    return 4.0
elif x in ['普通城市主干路','城市主干路']:
    return 2.5
elif x == '一级城市主干路':
    return 2.0
elif x == '高速公路':
    return 0.5"""

    道路中线缓冲要素.字段添加("道路等级映射", "双精度").字段计算("道路等级映射", "test(!道路等级!)", 代码块=代码块)
    道路中线缓冲要素 = 道路中线缓冲要素.要素创建_通过排序([["道路等级映射", "倒序"]])
    道路中线缓冲要素.字段删除(["道路等级映射"])
    with bxarcpy.游标类.游标创建_通过名称("更新", 道路中线缓冲要素.名称, 需操作的字段名称列表1) as 游标1:
        with bxarcpy.游标类.游标创建_通过名称("查询", 道路中线缓冲要素.名称, 需操作的字段名称列表1) as 游标2:
            # 游标1运行次数 = 0
            for x in 游标1:
                # 游标1运行次数 += 1
                # 游标2运行次数 = 0
                if x["道路等级"] == "高速公路":
                    游标1.行删除()
                    break
                for y in 游标2:
                    # 游标2运行次数 += 1
                    # print(f"游标1次数{游标1运行次数}，游标2次数{游标2运行次数}")
                    # print(f"x：{x}")
                    # print(f"y：{y}")
                    if x["OID@"] != y["OID@"] and x["_形状"].交集(y["_形状"]):
                        # print(f'ID{x["OID@"]}和ID{y["OID@"]}有交集')
                        x["_形状"] = x["_形状"].差集(y["_形状"])
                        游标1.行更新(x)
                游标2.重置()
    # with bxarcpy.游标类.游标创建_通过名称("查询", 道路中线缓冲要素.名称, 需操作的字段名称列表1) as 游标1:
    #     for x in 游标1:
    #     with bxarcpy.游标类.游标创建_通过名称("插入", 道路边线要素.名称, 需操作的字段名称列表2) as 游标2:
    #         for y in 游标2:

    # 道路边线要素.要素创建_通过复制并重命名重名要素(输出要素名称)
    地块要素 = bxarcpy.要素类.要素读取_通过名称(地块要素名称)
    地块要素 = 地块要素.要素创建_通过复制()

    道路边线要素 = 地块要素.要素创建_通过筛选("地类编号 LIKE '1207%'")
    道路边线要素 = 道路边线要素.要素创建_通过融合(["地类编号"]).要素几何修复()
    道路边线要素 = 道路边线要素.要素创建_通过转线()
    # 道路边线要素.要素创建_通过复制并重命名重名要素("AA_A道路边线没分割前")
    带有属性的道路边线要素 = 道路边线要素.要素创建_通过相交([道路中线缓冲要素.名称]).要素创建_通过多部件至单部件().要素几何修复()
    # 带有属性的道路边线要素.要素创建_通过复制并重命名重名要素("AA_A带有属性的那些")
    还没有属性的道路边线要素 = 道路边线要素.要素创建_通过擦除(道路中线缓冲要素.名称).要素创建_通过多部件至单部件().要素几何修复().字段添加("道路等级").字段添加("道路名称")
    # 还没有属性的道路边线要素.要素创建_通过复制并重命名重名要素("AA_A没有属性的那些")
    需操作的字段名称列表1 = ["_形状", "道路等级", "道路名称"]
    with bxarcpy.游标类.游标创建_通过名称("更新", 还没有属性的道路边线要素.名称, 需操作的字段名称列表1) as 游标1:
        with bxarcpy.游标类.游标创建_通过名称("查询", 带有属性的道路边线要素.名称, 需操作的字段名称列表1) as 游标2:
            for x in 游标1:
                for y in 游标2:
                    if x["_形状"].交集(y["_形状"], 类型="点"):
                        x["道路等级"] = y["道路等级"]
                        x["道路名称"] = y["道路名称"]
                        游标1.行更新(x)
                游标2.重置()
    合并后要素 = 带有属性的道路边线要素.要素创建_通过合并([还没有属性的道路边线要素.名称])
    范围要素 = bxarcpy.要素类.要素读取_通过名称(范围要素名称)
    范围转线后要素 = 范围要素.要素创建_通过转线()
    合并后要素 = 合并后要素.要素创建_通过擦除(范围转线后要素.名称)
    合并后要素.字段删除(保留字段名称列表=["道路名称", "道路等级"])
    合并后要素.要素创建_通过复制并重命名重名要素(输出要素名称)


if __name__ == "__main__":
    工作空间 = r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb"
    道路中线要素名称 = bxarcpy.环境.输入参数获取_以字符串形式(0, "DL_道路中线", True)
    with bxarcpy.环境.环境管理器(工作空间):
        道路_创建道路边线要素(道路中线要素名称, "DIST_用地规划图", "JX_规划范围线", "DL_道路边线")
