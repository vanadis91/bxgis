# -*- coding: utf-8 -*-

# import arcpy
# from sys import argv
# from socket import fromshare
import bxarcpy
from bxpy import 时间


def 计算所属区域(
    工作空间=r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb",
    输入要素名称="SS_配套设施",
    区域要素名称="JX_工业片区范围线",
    字段映射列表=[["所属工业片区", "区域编号"]],
    输出要素名称="SS_配套设施",
):
    with bxarcpy.环境.环境管理器(临时工作空间=工作空间, 工作空间=工作空间):
        bxarcpy.配置.是否覆盖输出要素 = True

        设施要素 = bxarcpy.要素类.要素读取_通过名称(输入要素名称)
        区域要素 = bxarcpy.要素类.要素读取_通过名称(区域要素名称)
        区域要素字段列表 = 区域要素.字段名称列表获取()
        from bxpy import 优化

        区域要素字段列表 = 优化.pop(区域要素字段列表, 值="OBJECTID")
        区域要素字段列表 = 优化.pop(区域要素字段列表, 值="Shape")
        区域要素字段列表 = 优化.pop(区域要素字段列表, 值="Shape_Length")
        区域要素字段列表 = 优化.pop(区域要素字段列表, 值="Shape_Area")

        空间连接后要素 = 设施要素.要素创建_通过空间连接(区域要素.名称, "在连接要素内")
        for x in 字段映射列表:
            空间连接后要素.字段添加(x[0]).字段计算(x[0], f"!{x[1]}!")

        # print(区域要素字段列表)
        需要删除的字段列表 = ["Join_Count", "TARGET_FID", "ORIG_FID"]
        需要删除的字段列表.extend(区域要素字段列表)
        print(f"需要删除的字段列表：{需要删除的字段列表}")
        # print(需要删除的字段列表)
        # 需要删除的字段列表.extend([x[1] for x in 字段映射列表])
        空间连接后要素.字段删除(需要删除的字段列表)
        空间连接后要素.要素创建_通过复制并重命名重名要素(输出要素名称)


def 清理规划范围外设施(
    工作空间=r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb",
    输入要素名称="SS_配套设施",
    输出要素名称="SS_配套设施",
):
    with bxarcpy.环境.环境管理器(临时工作空间=工作空间, 工作空间=工作空间):
        bxarcpy.配置.是否覆盖输出要素 = True
        设施要素 = bxarcpy.要素类.要素读取_通过名称(输入要素名称)
        设施要素 = 设施要素.要素创建_通过复制()

        需操作的字段名称列表 = ["设施所在街坊"]
        with bxarcpy.游标类.游标创建_通过名称("更新", 设施要素.名称, 需操作的字段名称列表) as 游标:
            for x in 游标:
                if x["设施所在街坊"] in ["", " ", None]:
                    游标.行删除()
        设施要素 = 设施要素.要素创建_通过复制并重命名重名要素(输出要素名称)


def 设施移动至正确位置(
    工作空间=r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb",
    输入要素名称="SS_配套设施",
    输出要素名称="SS_配套设施",
):
    with bxarcpy.环境.环境管理器(临时工作空间=工作空间, 工作空间=工作空间):
        bxarcpy.配置.是否覆盖输出要素 = True
        设施要素 = bxarcpy.要素类.要素读取_通过名称(输入要素名称)
        设施要素 = 设施要素.要素创建_通过复制()

        需操作的字段名称列表 = ["SHAPE@XY", "设施坐标"]
        with bxarcpy.游标类.游标创建_通过名称("更新", 设施要素.名称, 需操作的字段名称列表) as 游标:
            for x in 游标:
                import re

                设施坐标 = re.split("[()\s]", x["设施坐标"])
                x["SHAPE@XY"] = (float(设施坐标[1]), float(设施坐标[2]))

                游标.行更新(x)
        设施要素 = 设施要素.要素创建_通过复制并重命名重名要素(输出要素名称)


def 判断设施是否远期预留(
    工作空间=r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb",
    输入要素名称="SS_配套设施",
    输出要素名称="SS_配套设施",
    区域要素名称="CZ_控制线_三线_城镇开发边界",
    字段映射列表=[["设施所在用途分区", "GHFQMC"]],
):
    计算所属区域(工作空间=工作空间, 输入要素名称=输入要素名称, 区域要素名称=区域要素名称, 字段映射列表=字段映射列表, 输出要素名称=输出要素名称)
    with bxarcpy.环境.环境管理器(临时工作空间=工作空间, 工作空间=工作空间):
        bxarcpy.配置.是否覆盖输出要素 = True
        设施要素 = bxarcpy.要素类.要素读取_通过名称(输入要素名称)
        设施要素 = 设施要素.要素创建_通过复制()
        设施要素.字段添加("远期预留")

        需操作的字段名称列表 = ["远期预留", "设施所在用途分区", "开发动态"]
        with bxarcpy.游标类.游标创建_通过名称("更新", 设施要素.名称, 需操作的字段名称列表) as 游标:
            for x in 游标:
                if x["设施所在用途分区"] in ["", " ", None] and x["开发动态"] not in ["现状", "现状已实施", "现状保留"]:
                    x["远期预留"] = "是"
                else:
                    x["远期预留"] = "否"
                游标.行更新(x)

        设施要素 = 设施要素.要素创建_通过复制并重命名重名要素(输出要素名称)


def main():
    设施移动至正确位置(
        工作空间=r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb",
        输入要素名称="SS_配套设施",
        输出要素名称="SS_配套设施",
    )
    计算所属区域(
        工作空间=r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb",
        输入要素名称="SS_配套设施",
        区域要素名称="JX_工业片区范围线",
        字段映射列表=[["所属工业片区", "区域编号"]],
        输出要素名称="SS_配套设施",
    )
    计算所属区域(
        工作空间=r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb",
        输入要素名称="SS_配套设施",
        区域要素名称="JX_街区范围线",
        字段映射列表=[["设施所在街区", "街区编号"]],
        输出要素名称="SS_配套设施",
    )
    计算所属区域(
        工作空间=r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb",
        输入要素名称="SS_配套设施",
        区域要素名称="JX_街坊范围线",
        字段映射列表=[["设施所在街坊", "街坊编号"]],
        输出要素名称="SS_配套设施",
    )
    清理规划范围外设施(
        工作空间=r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb",
        输入要素名称="SS_配套设施",
        输出要素名称="SS_配套设施",
    )
    判断设施是否远期预留(
        工作空间=r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb",
        输入要素名称="SS_配套设施",
        输出要素名称="SS_配套设施",
        区域要素名称="CZ_控制线_三线_城镇开发边界",
        字段映射列表=[["设施所在用途分区", "GHFQMC"]],
    )


if __name__ == "__main__":
    main()
