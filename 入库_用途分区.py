# -*- coding: utf-8 -*-

import bxarcpy
from typing import Literal

_用途分区要求 = {
    "陆域生态控制区": "陆域生态控制区内的林地按照《林地保护等级及保护管理措施》Ⅱ级林地的要求进行管控；陆域生态控制区的水域按照《浙江省水域保护办法》第十条规定中重要水域的要求进行管控；陆域生态控制区内的湿地按照《湿地保护管理规定》《浙江省湿地保护条例》的规定进行管控",
    "永久基本农田一般区": "农田保护区中的永久基本农田按照《基本农田保护条例》、《浙江省基本农田保护条例》《自然资源部农业农村部关于加强和改进永久基本农田保护工作的通知》等法律法规和文件的要求进行管控",
    "城镇集中建设区": "城镇集中建设区各类城镇建设用途的准入应符合国土空间规划和其他相关规划，优先使用存量建设用地，引导城镇低效用地再开发，提高建设用地使用效率，落实建设用地标准控制制度，开展节约集约用地评价，推广应用节地技术和节地模式",
    "城镇弹性发展区": "城镇弹性发展区应维持现状用途为主，限制开发城镇建设，仅允许符合国土空间规划和其他相关规划的交通能源水利等基础设施建设和村民生活必需的少量的村庄建设",
    "居住生活区": "居住生活区内可兼有部分绿地与广场用地、道路与交通设施用地、公用设施用地、公共管理与公共服务设施用地、商业服务业设施用地等。有条件也可兼有一类工业用地（或创新产业）、服务社区级以下规模物流仓储用地等",
    "综合服务区": "综合服务区内可兼有部分绿地与广场用地小规模绿地与广场用地、道路与交通设施用地、公用设施用地、居住用地、商业服务业设施用地等",
    "商业商务区": "商业商务区以商业服务业设施用地用途为主，可适当兼有居住用地、绿地与广场用地、道路与交通设施用地等公用设施用地等",
    "工业发展区": "工业发展区可兼有服务企业的居住用地、绿地与广场用地、公共管理与公共服务设施用地、道路与交通设施用地、公用设施用地、商业服务业设施用地等",
    "物流仓储区": "仓储物流区可兼有服务企业的居住用地、绿地与广场用地、公共管理与公共服务设施用地、道路与交通设施用地、公用设施用地、商业服务业设施用地等",
    "绿地休闲区": "绿地休闲区可兼有公共管理与公共服务设施用地、道路与交通设施用地、公用设施用地、商业服务业设施用地等",
    "交通枢纽区": "交通枢纽区可兼有公共管理与公共服务设施用地、绿地与广场用地、公用设施用地、商业服务业设施用地等",
    "战略预留区": "战略预留区内以规划留白用地为主，可兼有部分提前布置的道路与交通设施用地。在符合法律法规的前提下，可做临时功能使用，如城市苗圃花圃、市政临时停车场堆场等",
    "村庄建设区": "在符合国土空间规划和其他相关规划的前提下，村庄建设区准入宅基地、农村公共服务设施、交通市政基础设施、农产品加工仓储、农家乐、民宿、创意办公、休闲农业、乡村旅游配套设施等农村生产、生店相关的用途。原则上禁止大型工业园区、大型商业商务酒店开发等大规模城镇建设用途",
    "一般农业区": "一般农业区内的耕地优先用于粮食和棉、油、糖、蔬菜等农产品生产。一般农业区内鼓励依据国土空间规划、全域土地综合整冶规划等相关规划开展土地整治，提升耕地质量，促进区内建设用地、其他农用地整治为耕地。一般农业区中零星分布的永久基本农田在满足相应保护任务的前提下可通过国土空间规划的编制和实施调为一般耕地，在未调出前，按照相应规则管制",
    "农田整备区": "农田整备区内的现状耕地优先用于粮食和棉、油、糖、蔬菜等农产品生产。在符合国土空间规划和其他相关规划的前提下，鼓励通过建设用地复垦、宜耕后备资源开发、农用地整理和其他土地整治工程的实施，在非耕地地类上垦造耕地，提升耕地连片程度；鼓励开展耕地质量提升、旱地改水田等项目，提升耕地质量。",
    "区域基础设施集中区": "区域基础设施集中区允许准入符合国土空间规划和其他相关规划的各类基础设施建设项目及其配套设施。区域基础设施集中区允许准入符合国土空间规划和其他相关规划的耕地垦造、生态建设等用途",
    "特殊用地集中区": "在符合国土空间规划和其他相关规划的前提下，特殊用地集中区允许准入军事、宗教、安保、殡葬等用途及其他符合规划的用途",
}
_用途分区代码映射 = [{"用途分区代码": "100", "用途分区名称": "生态保护区"}, {"用途分区代码": "110", "用途分区名称": "核心保护红线区"}, {"用途分区代码": "120", "用途分区名称": "陆域保护红线区"}, {"用途分区代码": "130", "用途分区名称": "海洋保护红线区"}, {"用途分区代码": "200", "用途分区名称": "生态控制区"}, {"用途分区代码": "210", "用途分区名称": "陆域生态控制区"}, {"用途分区代码": "220", "用途分区名称": "海洋生态控制区"}, {"用途分区代码": "300", "用途分区名称": "农田保护区"}, {"用途分区代码": "310", "用途分区名称": "永久基本农田集中区"}, {"用途分区代码": "320", "用途分区名称": "永久基本农田一般区"}, {"用途分区代码": "400", "用途分区名称": "城镇发展区"}, {"用途分区代码": "410", "用途分区名称": "城镇集中建设区"}, {"用途分区代码": "411", "用途分区名称": "居住生活区"}, {"用途分区代码": "412", "用途分区名称": "综合服务区"}, {"用途分区代码": "413", "用途分区名称": "商业商务区"}, {"用途分区代码": "414", "用途分区名称": "工业发展区"}, {"用途分区代码": "415", "用途分区名称": "物流仓储区"}, {"用途分区代码": "416", "用途分区名称": "绿地休闲区"}, {"用途分区代码": "417", "用途分区名称": "交通枢纽区"}, {"用途分区代码": "418", "用途分区名称": "战略预留区"}, {"用途分区代码": "420", "用途分区名称": "城镇弹性发展区"}, {"用途分区代码": "430", "用途分区名称": "特别用途区"}, {"用途分区代码": "500", "用途分区名称": "乡村发展区"}, {"用途分区代码": "510", "用途分区名称": "村庄建设区"}, {"用途分区代码": "520", "用途分区名称": "一般农业区"}, {"用途分区代码": "530", "用途分区名称": "农田整备区"}, {"用途分区代码": "540", "用途分区名称": "林业发展区"}, {"用途分区代码": "600", "用途分区名称": "海洋发展区"}, {"用途分区代码": "610", "用途分区名称": "渔业用海区"}, {"用途分区代码": "620", "用途分区名称": "交通运输用海区"}, {"用途分区代码": "630", "用途分区名称": "工矿通信用海区"}, {"用途分区代码": "640", "用途分区名称": "休憩用海区"}, {"用途分区代码": "650", "用途分区名称": "特殊用海区"}, {"用途分区代码": "660", "用途分区名称": "海洋预留区"}, {"用途分区代码": "700", "用途分区名称": "其他保护利用区"}, {"用途分区代码": "710", "用途分区名称": "矿产能源发展区"}, {"用途分区代码": "720", "用途分区名称": "文化遗产保护区"}, {"用途分区代码": "730", "用途分区名称": "区域基础设施集中区"}, {"用途分区代码": "740", "用途分区名称": "特殊用海集中区"}]


def 入库_用途分区(用途分区要素名称="DIST_用途分区图", 单元名称="临江单元", 批复时间="", 批复文号="", 单元编号="QT12"):
    用途分区要素 = bxarcpy.要素类.要素读取_通过名称(用途分区要素名称).要素创建_通过复制()

    用途分区要素.字段添加("DYMC", "字符串", 50, "规划编制单元名称").字段计算("DYMC", f"'{单元名称}'")
    用途分区要素.字段添加("PFSJ", "日期", None, "批复时间").字段计算("PFSJ", f"'{批复时间}'")
    用途分区要素.字段添加("PFWH", "字符串", 50, "批复文号").字段计算("PFWH", f"'{批复文号}'")

    用途分区要素 = 用途分区要素.要素创建_通过融合(["用途管制分区"]).要素创建_通过多部件至单部件()
    用途分区要素.字段添加("用途分区编号")
    用途分区要素 = 用途分区要素.要素创建_通过排序([["用途管制分区", "正序"]])
    with bxarcpy.游标类.游标创建_通过名称("更新", 用途分区要素.名称, ["用途管制分区", "用途分区编号"]) as 游标:
        用途分区编号 = 0
        for x in 游标:
            用途分区编号 += 1
            x["用途分区编号"] = 单元编号 + "-" + "YTFQ" + str(用途分区编号).zfill(2)
            游标.行更新(x)
    用途分区要素.字段添加("FQBM", "字符串", 20, "用途分区编码").字段计算("FQBM", "!用途分区编号!")

    用途分区要素.字段添加("FQDM", "字符串", 255, "用途分区代码")
    with bxarcpy.游标类.游标创建_通过名称("更新", 用途分区要素.名称, ["用途管制分区", "FQDM"]) as 游标:
        是否不存在对应的用途分区代码flag = False
        for x in 游标:
            映射列表 = [y for y in _用途分区代码映射 if y["用途分区名称"] == x["用途管制分区"]]
            if len(映射列表) > 0:
                x["FQDM"] = 映射列表[0]["用途分区代码"]
                游标.行更新(x)
            else:
                bxarcpy.环境.输出消息(f"未找到用途分区名称 {x['用途管制分区']} 对应的用途分区代码")
                是否不存在对应的用途分区代码flag = True
    if 是否不存在对应的用途分区代码flag:
        raise ValueError("程序中断，部分用途分区名称未找到对应的用途分区代码。")

    用途分区要素.字段添加("FQMC", "字符串", 255, "用途分区名称").字段计算("FQMC", "!用途管制分区!")
    用途分区要素.字段添加("FQMJ", "双精度", 50, "用途分区面积").字段计算("FQMJ", "round(!Shape_Area!/10000, 4)")

    用途分区要素.字段添加("FQYQ", "字符串", 255, "用途分区要求")
    with bxarcpy.游标类.游标创建_通过名称("更新", 用途分区要素.名称, ["用途管制分区", "FQYQ"]) as 游标:
        for x in 游标:
            x["FQYQ"] = _用途分区要求[x["用途管制分区"]]
            游标.行更新(x)

    用途分区要素.字段添加("BZ", "字符串", 255, "备注")

    用途分区要素.字段删除(保留字段名称列表=["DYMC", "PFSJ", "PFWH", "FQBM", "FQDM", "FQMC", "FQMJ", "FQYQ", "BZ"])

    数据库 = bxarcpy.数据库类.数据库读取_通过路径(bxarcpy.配置.当前工作空间)
    if "入库材料" not in 数据库.要素数据集名称列表获取():
        要素数据集 = bxarcpy.要素数据集类.要素数据集创建("入库材料")
    用途分区要素.要素创建_通过复制并重命名重名要素(f"入库材料/XG_YTFQ")


if __name__ == "__main__":
    # 工作空间 = r"C:\Users\common\project\F富阳受降控规\受降北_数据库.gdb"
    工作空间 = r"C:\Users\common\project\J江东区临江控规\临江控规_数据库.gdb"
    with bxarcpy.环境.环境管理器(工作空间):
        入库_用途分区(用途分区要素名称="DIST_用途分区图", 单元名称="临江单元", 批复时间="", 批复文号="", 单元编号="QT12")
